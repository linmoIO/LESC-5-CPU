circuit PiplineCPUwithBPandF :
  module PCReg :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<64>, out : UInt<64>}

    reg pcReg : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[PCReg.scala 26:22]
    pcReg <= io.in @[PCReg.scala 28:9]
    io.out <= pcReg @[PCReg.scala 29:10]

  module InstMemory :
    input clock : Clock
    input reset : Reset
    output io : { flip address : UInt<64>, inst : UInt<32>}

    cmem instMem : UInt<8>[4] [1024] @[InstMemory.scala 32:20]
    node address = dshr(io.address, UInt<2>("h2")) @[InstMemory.scala 34:28]
    node _io_inst_T = bits(address, 9, 0) @[InstMemory.scala 37:26]
    read mport io_inst_MPORT = instMem[_io_inst_T], clock @[InstMemory.scala 37:26]
    node io_inst_lo = cat(io_inst_MPORT[1], io_inst_MPORT[0]) @[InstMemory.scala 37:36]
    node io_inst_hi = cat(io_inst_MPORT[3], io_inst_MPORT[2]) @[InstMemory.scala 37:36]
    node _io_inst_T_1 = cat(io_inst_hi, io_inst_lo) @[InstMemory.scala 37:36]
    io.inst <= _io_inst_T_1 @[InstMemory.scala 37:11]

  module ControlUnit :
    input clock : Clock
    input reset : Reset
    output io : { flip opcode : UInt<7>, isJALR : UInt<1>, isBType : UInt<1>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, immRs2ToALU : UInt<1>, pcRs1ToALU : UInt<1>, isIType : UInt<1>, isRType : UInt<1>, isWord : UInt<1>, ifWriteToReg : UInt<1>, isValidInst : UInt<1>}

    node _controlSignals_T = and(io.opcode, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _controlSignals_T_1 = eq(UInt<6>("h37"), _controlSignals_T) @[Lookup.scala 31:38]
    node _controlSignals_T_2 = and(io.opcode, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _controlSignals_T_3 = eq(UInt<5>("h17"), _controlSignals_T_2) @[Lookup.scala 31:38]
    node _controlSignals_T_4 = and(io.opcode, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _controlSignals_T_5 = eq(UInt<7>("h6f"), _controlSignals_T_4) @[Lookup.scala 31:38]
    node _controlSignals_T_6 = and(io.opcode, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _controlSignals_T_7 = eq(UInt<7>("h67"), _controlSignals_T_6) @[Lookup.scala 31:38]
    node _controlSignals_T_8 = and(io.opcode, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _controlSignals_T_9 = eq(UInt<7>("h63"), _controlSignals_T_8) @[Lookup.scala 31:38]
    node _controlSignals_T_10 = and(io.opcode, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _controlSignals_T_11 = eq(UInt<2>("h3"), _controlSignals_T_10) @[Lookup.scala 31:38]
    node _controlSignals_T_12 = and(io.opcode, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _controlSignals_T_13 = eq(UInt<6>("h23"), _controlSignals_T_12) @[Lookup.scala 31:38]
    node _controlSignals_T_14 = and(io.opcode, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _controlSignals_T_15 = eq(UInt<5>("h13"), _controlSignals_T_14) @[Lookup.scala 31:38]
    node _controlSignals_T_16 = and(io.opcode, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _controlSignals_T_17 = eq(UInt<5>("h1b"), _controlSignals_T_16) @[Lookup.scala 31:38]
    node _controlSignals_T_18 = and(io.opcode, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _controlSignals_T_19 = eq(UInt<6>("h33"), _controlSignals_T_18) @[Lookup.scala 31:38]
    node _controlSignals_T_20 = and(io.opcode, UInt<7>("h7f")) @[Lookup.scala 31:38]
    node _controlSignals_T_21 = eq(UInt<6>("h3b"), _controlSignals_T_20) @[Lookup.scala 31:38]
    node _controlSignals_T_22 = mux(_controlSignals_T_21, UInt<1>("h0"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_23 = mux(_controlSignals_T_19, UInt<1>("h0"), _controlSignals_T_22) @[Lookup.scala 34:39]
    node _controlSignals_T_24 = mux(_controlSignals_T_17, UInt<1>("h0"), _controlSignals_T_23) @[Lookup.scala 34:39]
    node _controlSignals_T_25 = mux(_controlSignals_T_15, UInt<1>("h0"), _controlSignals_T_24) @[Lookup.scala 34:39]
    node _controlSignals_T_26 = mux(_controlSignals_T_13, UInt<1>("h0"), _controlSignals_T_25) @[Lookup.scala 34:39]
    node _controlSignals_T_27 = mux(_controlSignals_T_11, UInt<1>("h0"), _controlSignals_T_26) @[Lookup.scala 34:39]
    node _controlSignals_T_28 = mux(_controlSignals_T_9, UInt<1>("h0"), _controlSignals_T_27) @[Lookup.scala 34:39]
    node _controlSignals_T_29 = mux(_controlSignals_T_7, UInt<1>("h1"), _controlSignals_T_28) @[Lookup.scala 34:39]
    node _controlSignals_T_30 = mux(_controlSignals_T_5, UInt<1>("h0"), _controlSignals_T_29) @[Lookup.scala 34:39]
    node _controlSignals_T_31 = mux(_controlSignals_T_3, UInt<1>("h0"), _controlSignals_T_30) @[Lookup.scala 34:39]
    node controlSignals_0 = mux(_controlSignals_T_1, UInt<1>("h0"), _controlSignals_T_31) @[Lookup.scala 34:39]
    node _controlSignals_T_32 = mux(_controlSignals_T_21, UInt<1>("h0"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_33 = mux(_controlSignals_T_19, UInt<1>("h0"), _controlSignals_T_32) @[Lookup.scala 34:39]
    node _controlSignals_T_34 = mux(_controlSignals_T_17, UInt<1>("h0"), _controlSignals_T_33) @[Lookup.scala 34:39]
    node _controlSignals_T_35 = mux(_controlSignals_T_15, UInt<1>("h0"), _controlSignals_T_34) @[Lookup.scala 34:39]
    node _controlSignals_T_36 = mux(_controlSignals_T_13, UInt<1>("h0"), _controlSignals_T_35) @[Lookup.scala 34:39]
    node _controlSignals_T_37 = mux(_controlSignals_T_11, UInt<1>("h0"), _controlSignals_T_36) @[Lookup.scala 34:39]
    node _controlSignals_T_38 = mux(_controlSignals_T_9, UInt<1>("h1"), _controlSignals_T_37) @[Lookup.scala 34:39]
    node _controlSignals_T_39 = mux(_controlSignals_T_7, UInt<1>("h0"), _controlSignals_T_38) @[Lookup.scala 34:39]
    node _controlSignals_T_40 = mux(_controlSignals_T_5, UInt<1>("h0"), _controlSignals_T_39) @[Lookup.scala 34:39]
    node _controlSignals_T_41 = mux(_controlSignals_T_3, UInt<1>("h0"), _controlSignals_T_40) @[Lookup.scala 34:39]
    node controlSignals_1 = mux(_controlSignals_T_1, UInt<1>("h0"), _controlSignals_T_41) @[Lookup.scala 34:39]
    node _controlSignals_T_42 = mux(_controlSignals_T_21, UInt<1>("h0"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_43 = mux(_controlSignals_T_19, UInt<1>("h0"), _controlSignals_T_42) @[Lookup.scala 34:39]
    node _controlSignals_T_44 = mux(_controlSignals_T_17, UInt<1>("h0"), _controlSignals_T_43) @[Lookup.scala 34:39]
    node _controlSignals_T_45 = mux(_controlSignals_T_15, UInt<1>("h0"), _controlSignals_T_44) @[Lookup.scala 34:39]
    node _controlSignals_T_46 = mux(_controlSignals_T_13, UInt<1>("h0"), _controlSignals_T_45) @[Lookup.scala 34:39]
    node _controlSignals_T_47 = mux(_controlSignals_T_11, UInt<1>("h0"), _controlSignals_T_46) @[Lookup.scala 34:39]
    node _controlSignals_T_48 = mux(_controlSignals_T_9, UInt<1>("h0"), _controlSignals_T_47) @[Lookup.scala 34:39]
    node _controlSignals_T_49 = mux(_controlSignals_T_7, UInt<1>("h1"), _controlSignals_T_48) @[Lookup.scala 34:39]
    node _controlSignals_T_50 = mux(_controlSignals_T_5, UInt<1>("h1"), _controlSignals_T_49) @[Lookup.scala 34:39]
    node _controlSignals_T_51 = mux(_controlSignals_T_3, UInt<1>("h0"), _controlSignals_T_50) @[Lookup.scala 34:39]
    node controlSignals_2 = mux(_controlSignals_T_1, UInt<1>("h0"), _controlSignals_T_51) @[Lookup.scala 34:39]
    node _controlSignals_T_52 = mux(_controlSignals_T_21, UInt<1>("h0"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_53 = mux(_controlSignals_T_19, UInt<1>("h0"), _controlSignals_T_52) @[Lookup.scala 34:39]
    node _controlSignals_T_54 = mux(_controlSignals_T_17, UInt<1>("h0"), _controlSignals_T_53) @[Lookup.scala 34:39]
    node _controlSignals_T_55 = mux(_controlSignals_T_15, UInt<1>("h0"), _controlSignals_T_54) @[Lookup.scala 34:39]
    node _controlSignals_T_56 = mux(_controlSignals_T_13, UInt<1>("h0"), _controlSignals_T_55) @[Lookup.scala 34:39]
    node _controlSignals_T_57 = mux(_controlSignals_T_11, UInt<1>("h0"), _controlSignals_T_56) @[Lookup.scala 34:39]
    node _controlSignals_T_58 = mux(_controlSignals_T_9, UInt<1>("h0"), _controlSignals_T_57) @[Lookup.scala 34:39]
    node _controlSignals_T_59 = mux(_controlSignals_T_7, UInt<1>("h0"), _controlSignals_T_58) @[Lookup.scala 34:39]
    node _controlSignals_T_60 = mux(_controlSignals_T_5, UInt<1>("h0"), _controlSignals_T_59) @[Lookup.scala 34:39]
    node _controlSignals_T_61 = mux(_controlSignals_T_3, UInt<1>("h0"), _controlSignals_T_60) @[Lookup.scala 34:39]
    node controlSignals_3 = mux(_controlSignals_T_1, UInt<1>("h1"), _controlSignals_T_61) @[Lookup.scala 34:39]
    node _controlSignals_T_62 = mux(_controlSignals_T_21, UInt<1>("h0"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_63 = mux(_controlSignals_T_19, UInt<1>("h0"), _controlSignals_T_62) @[Lookup.scala 34:39]
    node _controlSignals_T_64 = mux(_controlSignals_T_17, UInt<1>("h0"), _controlSignals_T_63) @[Lookup.scala 34:39]
    node _controlSignals_T_65 = mux(_controlSignals_T_15, UInt<1>("h0"), _controlSignals_T_64) @[Lookup.scala 34:39]
    node _controlSignals_T_66 = mux(_controlSignals_T_13, UInt<1>("h0"), _controlSignals_T_65) @[Lookup.scala 34:39]
    node _controlSignals_T_67 = mux(_controlSignals_T_11, UInt<1>("h1"), _controlSignals_T_66) @[Lookup.scala 34:39]
    node _controlSignals_T_68 = mux(_controlSignals_T_9, UInt<1>("h0"), _controlSignals_T_67) @[Lookup.scala 34:39]
    node _controlSignals_T_69 = mux(_controlSignals_T_7, UInt<1>("h0"), _controlSignals_T_68) @[Lookup.scala 34:39]
    node _controlSignals_T_70 = mux(_controlSignals_T_5, UInt<1>("h0"), _controlSignals_T_69) @[Lookup.scala 34:39]
    node _controlSignals_T_71 = mux(_controlSignals_T_3, UInt<1>("h0"), _controlSignals_T_70) @[Lookup.scala 34:39]
    node controlSignals_4 = mux(_controlSignals_T_1, UInt<1>("h0"), _controlSignals_T_71) @[Lookup.scala 34:39]
    node _controlSignals_T_72 = mux(_controlSignals_T_21, UInt<1>("h0"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_73 = mux(_controlSignals_T_19, UInt<1>("h0"), _controlSignals_T_72) @[Lookup.scala 34:39]
    node _controlSignals_T_74 = mux(_controlSignals_T_17, UInt<1>("h0"), _controlSignals_T_73) @[Lookup.scala 34:39]
    node _controlSignals_T_75 = mux(_controlSignals_T_15, UInt<1>("h0"), _controlSignals_T_74) @[Lookup.scala 34:39]
    node _controlSignals_T_76 = mux(_controlSignals_T_13, UInt<1>("h1"), _controlSignals_T_75) @[Lookup.scala 34:39]
    node _controlSignals_T_77 = mux(_controlSignals_T_11, UInt<1>("h0"), _controlSignals_T_76) @[Lookup.scala 34:39]
    node _controlSignals_T_78 = mux(_controlSignals_T_9, UInt<1>("h0"), _controlSignals_T_77) @[Lookup.scala 34:39]
    node _controlSignals_T_79 = mux(_controlSignals_T_7, UInt<1>("h0"), _controlSignals_T_78) @[Lookup.scala 34:39]
    node _controlSignals_T_80 = mux(_controlSignals_T_5, UInt<1>("h0"), _controlSignals_T_79) @[Lookup.scala 34:39]
    node _controlSignals_T_81 = mux(_controlSignals_T_3, UInt<1>("h0"), _controlSignals_T_80) @[Lookup.scala 34:39]
    node controlSignals_5 = mux(_controlSignals_T_1, UInt<1>("h0"), _controlSignals_T_81) @[Lookup.scala 34:39]
    node _controlSignals_T_82 = mux(_controlSignals_T_21, UInt<1>("h0"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_83 = mux(_controlSignals_T_19, UInt<1>("h0"), _controlSignals_T_82) @[Lookup.scala 34:39]
    node _controlSignals_T_84 = mux(_controlSignals_T_17, UInt<1>("h1"), _controlSignals_T_83) @[Lookup.scala 34:39]
    node _controlSignals_T_85 = mux(_controlSignals_T_15, UInt<1>("h1"), _controlSignals_T_84) @[Lookup.scala 34:39]
    node _controlSignals_T_86 = mux(_controlSignals_T_13, UInt<1>("h1"), _controlSignals_T_85) @[Lookup.scala 34:39]
    node _controlSignals_T_87 = mux(_controlSignals_T_11, UInt<1>("h1"), _controlSignals_T_86) @[Lookup.scala 34:39]
    node _controlSignals_T_88 = mux(_controlSignals_T_9, UInt<1>("h0"), _controlSignals_T_87) @[Lookup.scala 34:39]
    node _controlSignals_T_89 = mux(_controlSignals_T_7, UInt<1>("h1"), _controlSignals_T_88) @[Lookup.scala 34:39]
    node _controlSignals_T_90 = mux(_controlSignals_T_5, UInt<1>("h0"), _controlSignals_T_89) @[Lookup.scala 34:39]
    node _controlSignals_T_91 = mux(_controlSignals_T_3, UInt<1>("h1"), _controlSignals_T_90) @[Lookup.scala 34:39]
    node controlSignals_6 = mux(_controlSignals_T_1, UInt<1>("h0"), _controlSignals_T_91) @[Lookup.scala 34:39]
    node _controlSignals_T_92 = mux(_controlSignals_T_21, UInt<1>("h0"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_93 = mux(_controlSignals_T_19, UInt<1>("h0"), _controlSignals_T_92) @[Lookup.scala 34:39]
    node _controlSignals_T_94 = mux(_controlSignals_T_17, UInt<1>("h0"), _controlSignals_T_93) @[Lookup.scala 34:39]
    node _controlSignals_T_95 = mux(_controlSignals_T_15, UInt<1>("h0"), _controlSignals_T_94) @[Lookup.scala 34:39]
    node _controlSignals_T_96 = mux(_controlSignals_T_13, UInt<1>("h0"), _controlSignals_T_95) @[Lookup.scala 34:39]
    node _controlSignals_T_97 = mux(_controlSignals_T_11, UInt<1>("h0"), _controlSignals_T_96) @[Lookup.scala 34:39]
    node _controlSignals_T_98 = mux(_controlSignals_T_9, UInt<1>("h0"), _controlSignals_T_97) @[Lookup.scala 34:39]
    node _controlSignals_T_99 = mux(_controlSignals_T_7, UInt<1>("h0"), _controlSignals_T_98) @[Lookup.scala 34:39]
    node _controlSignals_T_100 = mux(_controlSignals_T_5, UInt<1>("h0"), _controlSignals_T_99) @[Lookup.scala 34:39]
    node _controlSignals_T_101 = mux(_controlSignals_T_3, UInt<1>("h1"), _controlSignals_T_100) @[Lookup.scala 34:39]
    node controlSignals_7 = mux(_controlSignals_T_1, UInt<1>("h0"), _controlSignals_T_101) @[Lookup.scala 34:39]
    node _controlSignals_T_102 = mux(_controlSignals_T_21, UInt<1>("h0"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_103 = mux(_controlSignals_T_19, UInt<1>("h0"), _controlSignals_T_102) @[Lookup.scala 34:39]
    node _controlSignals_T_104 = mux(_controlSignals_T_17, UInt<1>("h1"), _controlSignals_T_103) @[Lookup.scala 34:39]
    node _controlSignals_T_105 = mux(_controlSignals_T_15, UInt<1>("h1"), _controlSignals_T_104) @[Lookup.scala 34:39]
    node _controlSignals_T_106 = mux(_controlSignals_T_13, UInt<1>("h0"), _controlSignals_T_105) @[Lookup.scala 34:39]
    node _controlSignals_T_107 = mux(_controlSignals_T_11, UInt<1>("h0"), _controlSignals_T_106) @[Lookup.scala 34:39]
    node _controlSignals_T_108 = mux(_controlSignals_T_9, UInt<1>("h0"), _controlSignals_T_107) @[Lookup.scala 34:39]
    node _controlSignals_T_109 = mux(_controlSignals_T_7, UInt<1>("h0"), _controlSignals_T_108) @[Lookup.scala 34:39]
    node _controlSignals_T_110 = mux(_controlSignals_T_5, UInt<1>("h0"), _controlSignals_T_109) @[Lookup.scala 34:39]
    node _controlSignals_T_111 = mux(_controlSignals_T_3, UInt<1>("h0"), _controlSignals_T_110) @[Lookup.scala 34:39]
    node controlSignals_8 = mux(_controlSignals_T_1, UInt<1>("h0"), _controlSignals_T_111) @[Lookup.scala 34:39]
    node _controlSignals_T_112 = mux(_controlSignals_T_21, UInt<1>("h1"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_113 = mux(_controlSignals_T_19, UInt<1>("h1"), _controlSignals_T_112) @[Lookup.scala 34:39]
    node _controlSignals_T_114 = mux(_controlSignals_T_17, UInt<1>("h0"), _controlSignals_T_113) @[Lookup.scala 34:39]
    node _controlSignals_T_115 = mux(_controlSignals_T_15, UInt<1>("h0"), _controlSignals_T_114) @[Lookup.scala 34:39]
    node _controlSignals_T_116 = mux(_controlSignals_T_13, UInt<1>("h0"), _controlSignals_T_115) @[Lookup.scala 34:39]
    node _controlSignals_T_117 = mux(_controlSignals_T_11, UInt<1>("h0"), _controlSignals_T_116) @[Lookup.scala 34:39]
    node _controlSignals_T_118 = mux(_controlSignals_T_9, UInt<1>("h0"), _controlSignals_T_117) @[Lookup.scala 34:39]
    node _controlSignals_T_119 = mux(_controlSignals_T_7, UInt<1>("h0"), _controlSignals_T_118) @[Lookup.scala 34:39]
    node _controlSignals_T_120 = mux(_controlSignals_T_5, UInt<1>("h0"), _controlSignals_T_119) @[Lookup.scala 34:39]
    node _controlSignals_T_121 = mux(_controlSignals_T_3, UInt<1>("h0"), _controlSignals_T_120) @[Lookup.scala 34:39]
    node controlSignals_9 = mux(_controlSignals_T_1, UInt<1>("h0"), _controlSignals_T_121) @[Lookup.scala 34:39]
    node _controlSignals_T_122 = mux(_controlSignals_T_21, UInt<1>("h1"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_123 = mux(_controlSignals_T_19, UInt<1>("h0"), _controlSignals_T_122) @[Lookup.scala 34:39]
    node _controlSignals_T_124 = mux(_controlSignals_T_17, UInt<1>("h1"), _controlSignals_T_123) @[Lookup.scala 34:39]
    node _controlSignals_T_125 = mux(_controlSignals_T_15, UInt<1>("h0"), _controlSignals_T_124) @[Lookup.scala 34:39]
    node _controlSignals_T_126 = mux(_controlSignals_T_13, UInt<1>("h0"), _controlSignals_T_125) @[Lookup.scala 34:39]
    node _controlSignals_T_127 = mux(_controlSignals_T_11, UInt<1>("h0"), _controlSignals_T_126) @[Lookup.scala 34:39]
    node _controlSignals_T_128 = mux(_controlSignals_T_9, UInt<1>("h0"), _controlSignals_T_127) @[Lookup.scala 34:39]
    node _controlSignals_T_129 = mux(_controlSignals_T_7, UInt<1>("h0"), _controlSignals_T_128) @[Lookup.scala 34:39]
    node _controlSignals_T_130 = mux(_controlSignals_T_5, UInt<1>("h0"), _controlSignals_T_129) @[Lookup.scala 34:39]
    node _controlSignals_T_131 = mux(_controlSignals_T_3, UInt<1>("h0"), _controlSignals_T_130) @[Lookup.scala 34:39]
    node controlSignals_10 = mux(_controlSignals_T_1, UInt<1>("h0"), _controlSignals_T_131) @[Lookup.scala 34:39]
    node _controlSignals_T_132 = mux(_controlSignals_T_21, UInt<1>("h1"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_133 = mux(_controlSignals_T_19, UInt<1>("h1"), _controlSignals_T_132) @[Lookup.scala 34:39]
    node _controlSignals_T_134 = mux(_controlSignals_T_17, UInt<1>("h1"), _controlSignals_T_133) @[Lookup.scala 34:39]
    node _controlSignals_T_135 = mux(_controlSignals_T_15, UInt<1>("h1"), _controlSignals_T_134) @[Lookup.scala 34:39]
    node _controlSignals_T_136 = mux(_controlSignals_T_13, UInt<1>("h0"), _controlSignals_T_135) @[Lookup.scala 34:39]
    node _controlSignals_T_137 = mux(_controlSignals_T_11, UInt<1>("h1"), _controlSignals_T_136) @[Lookup.scala 34:39]
    node _controlSignals_T_138 = mux(_controlSignals_T_9, UInt<1>("h0"), _controlSignals_T_137) @[Lookup.scala 34:39]
    node _controlSignals_T_139 = mux(_controlSignals_T_7, UInt<1>("h1"), _controlSignals_T_138) @[Lookup.scala 34:39]
    node _controlSignals_T_140 = mux(_controlSignals_T_5, UInt<1>("h1"), _controlSignals_T_139) @[Lookup.scala 34:39]
    node _controlSignals_T_141 = mux(_controlSignals_T_3, UInt<1>("h1"), _controlSignals_T_140) @[Lookup.scala 34:39]
    node controlSignals_11 = mux(_controlSignals_T_1, UInt<1>("h1"), _controlSignals_T_141) @[Lookup.scala 34:39]
    node _controlSignals_T_142 = mux(_controlSignals_T_21, UInt<1>("h1"), UInt<1>("h0")) @[Lookup.scala 34:39]
    node _controlSignals_T_143 = mux(_controlSignals_T_19, UInt<1>("h1"), _controlSignals_T_142) @[Lookup.scala 34:39]
    node _controlSignals_T_144 = mux(_controlSignals_T_17, UInt<1>("h1"), _controlSignals_T_143) @[Lookup.scala 34:39]
    node _controlSignals_T_145 = mux(_controlSignals_T_15, UInt<1>("h1"), _controlSignals_T_144) @[Lookup.scala 34:39]
    node _controlSignals_T_146 = mux(_controlSignals_T_13, UInt<1>("h1"), _controlSignals_T_145) @[Lookup.scala 34:39]
    node _controlSignals_T_147 = mux(_controlSignals_T_11, UInt<1>("h1"), _controlSignals_T_146) @[Lookup.scala 34:39]
    node _controlSignals_T_148 = mux(_controlSignals_T_9, UInt<1>("h1"), _controlSignals_T_147) @[Lookup.scala 34:39]
    node _controlSignals_T_149 = mux(_controlSignals_T_7, UInt<1>("h1"), _controlSignals_T_148) @[Lookup.scala 34:39]
    node _controlSignals_T_150 = mux(_controlSignals_T_5, UInt<1>("h1"), _controlSignals_T_149) @[Lookup.scala 34:39]
    node _controlSignals_T_151 = mux(_controlSignals_T_3, UInt<1>("h1"), _controlSignals_T_150) @[Lookup.scala 34:39]
    node controlSignals_12 = mux(_controlSignals_T_1, UInt<1>("h1"), _controlSignals_T_151) @[Lookup.scala 34:39]
    io.isJALR <= controlSignals_0 @[ControlUnit.scala 136:13]
    io.isBType <= controlSignals_1 @[ControlUnit.scala 137:14]
    io.isJump <= controlSignals_2 @[ControlUnit.scala 138:13]
    io.immALUToReg <= controlSignals_3 @[ControlUnit.scala 139:18]
    io.memRead <= controlSignals_4 @[ControlUnit.scala 140:14]
    io.memWrite <= controlSignals_5 @[ControlUnit.scala 141:15]
    io.immRs2ToALU <= controlSignals_6 @[ControlUnit.scala 142:18]
    io.pcRs1ToALU <= controlSignals_7 @[ControlUnit.scala 143:17]
    io.isIType <= controlSignals_8 @[ControlUnit.scala 144:14]
    io.isRType <= controlSignals_9 @[ControlUnit.scala 145:14]
    io.isWord <= controlSignals_10 @[ControlUnit.scala 146:13]
    io.ifWriteToReg <= controlSignals_11 @[ControlUnit.scala 147:19]
    io.isValidInst <= controlSignals_12 @[ControlUnit.scala 148:18]

  module Inst2ImmUnit :
    input clock : Clock
    input reset : Reset
    output io : { flip inst : UInt<32>, imm : UInt<64>}

    node opcode = bits(io.inst, 6, 0) @[Inst2ImmUnit.scala 28:23]
    wire immWire : UInt<64>
    immWire <= UInt<64>("h0")
    node _T = eq(UInt<7>("h67"), opcode) @[Inst2ImmUnit.scala 32:18]
    when _T : @[Inst2ImmUnit.scala 32:18]
      node _immWire_T = bits(io.inst, 31, 31) @[Inst2ImmUnit.scala 36:43]
      node _immWire_T_1 = bits(_immWire_T, 0, 0) @[Bitwise.scala 77:15]
      node _immWire_T_2 = mux(_immWire_T_1, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
      node _immWire_T_3 = bits(io.inst, 30, 25) @[Inst2ImmUnit.scala 36:57]
      node _immWire_T_4 = bits(io.inst, 24, 21) @[Inst2ImmUnit.scala 36:73]
      node _immWire_T_5 = bits(io.inst, 20, 20) @[Inst2ImmUnit.scala 36:89]
      node immWire_lo = cat(_immWire_T_4, _immWire_T_5) @[Cat.scala 33:92]
      node immWire_hi = cat(_immWire_T_2, _immWire_T_3) @[Cat.scala 33:92]
      node _immWire_T_6 = cat(immWire_hi, immWire_lo) @[Cat.scala 33:92]
      immWire <= _immWire_T_6 @[Inst2ImmUnit.scala 36:15]
    else :
      node _T_1 = eq(UInt<2>("h3"), opcode) @[Inst2ImmUnit.scala 32:18]
      when _T_1 : @[Inst2ImmUnit.scala 32:18]
        node _immWire_T_7 = bits(io.inst, 31, 31) @[Inst2ImmUnit.scala 39:43]
        node _immWire_T_8 = bits(_immWire_T_7, 0, 0) @[Bitwise.scala 77:15]
        node _immWire_T_9 = mux(_immWire_T_8, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
        node _immWire_T_10 = bits(io.inst, 30, 25) @[Inst2ImmUnit.scala 39:57]
        node _immWire_T_11 = bits(io.inst, 24, 21) @[Inst2ImmUnit.scala 39:73]
        node _immWire_T_12 = bits(io.inst, 20, 20) @[Inst2ImmUnit.scala 39:89]
        node immWire_lo_1 = cat(_immWire_T_11, _immWire_T_12) @[Cat.scala 33:92]
        node immWire_hi_1 = cat(_immWire_T_9, _immWire_T_10) @[Cat.scala 33:92]
        node _immWire_T_13 = cat(immWire_hi_1, immWire_lo_1) @[Cat.scala 33:92]
        immWire <= _immWire_T_13 @[Inst2ImmUnit.scala 39:15]
      else :
        node _T_2 = eq(UInt<5>("h13"), opcode) @[Inst2ImmUnit.scala 32:18]
        when _T_2 : @[Inst2ImmUnit.scala 32:18]
          node _immWire_T_14 = bits(io.inst, 31, 31) @[Inst2ImmUnit.scala 42:43]
          node _immWire_T_15 = bits(_immWire_T_14, 0, 0) @[Bitwise.scala 77:15]
          node _immWire_T_16 = mux(_immWire_T_15, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
          node _immWire_T_17 = bits(io.inst, 30, 25) @[Inst2ImmUnit.scala 42:57]
          node _immWire_T_18 = bits(io.inst, 24, 21) @[Inst2ImmUnit.scala 42:73]
          node _immWire_T_19 = bits(io.inst, 20, 20) @[Inst2ImmUnit.scala 42:89]
          node immWire_lo_2 = cat(_immWire_T_18, _immWire_T_19) @[Cat.scala 33:92]
          node immWire_hi_2 = cat(_immWire_T_16, _immWire_T_17) @[Cat.scala 33:92]
          node _immWire_T_20 = cat(immWire_hi_2, immWire_lo_2) @[Cat.scala 33:92]
          immWire <= _immWire_T_20 @[Inst2ImmUnit.scala 42:15]
        else :
          node _T_3 = eq(UInt<5>("h1b"), opcode) @[Inst2ImmUnit.scala 32:18]
          when _T_3 : @[Inst2ImmUnit.scala 32:18]
            node _immWire_T_21 = bits(io.inst, 31, 31) @[Inst2ImmUnit.scala 45:43]
            node _immWire_T_22 = bits(_immWire_T_21, 0, 0) @[Bitwise.scala 77:15]
            node _immWire_T_23 = mux(_immWire_T_22, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
            node _immWire_T_24 = bits(io.inst, 30, 25) @[Inst2ImmUnit.scala 45:57]
            node _immWire_T_25 = bits(io.inst, 24, 21) @[Inst2ImmUnit.scala 45:73]
            node _immWire_T_26 = bits(io.inst, 20, 20) @[Inst2ImmUnit.scala 45:89]
            node immWire_lo_3 = cat(_immWire_T_25, _immWire_T_26) @[Cat.scala 33:92]
            node immWire_hi_3 = cat(_immWire_T_23, _immWire_T_24) @[Cat.scala 33:92]
            node _immWire_T_27 = cat(immWire_hi_3, immWire_lo_3) @[Cat.scala 33:92]
            immWire <= _immWire_T_27 @[Inst2ImmUnit.scala 45:15]
          else :
            node _T_4 = eq(UInt<6>("h23"), opcode) @[Inst2ImmUnit.scala 32:18]
            when _T_4 : @[Inst2ImmUnit.scala 32:18]
              node _immWire_T_28 = bits(io.inst, 31, 31) @[Inst2ImmUnit.scala 50:43]
              node _immWire_T_29 = bits(_immWire_T_28, 0, 0) @[Bitwise.scala 77:15]
              node _immWire_T_30 = mux(_immWire_T_29, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 77:12]
              node _immWire_T_31 = bits(io.inst, 30, 25) @[Inst2ImmUnit.scala 50:57]
              node _immWire_T_32 = bits(io.inst, 11, 8) @[Inst2ImmUnit.scala 50:73]
              node _immWire_T_33 = bits(io.inst, 7, 7) @[Inst2ImmUnit.scala 50:88]
              node immWire_lo_4 = cat(_immWire_T_32, _immWire_T_33) @[Cat.scala 33:92]
              node immWire_hi_4 = cat(_immWire_T_30, _immWire_T_31) @[Cat.scala 33:92]
              node _immWire_T_34 = cat(immWire_hi_4, immWire_lo_4) @[Cat.scala 33:92]
              immWire <= _immWire_T_34 @[Inst2ImmUnit.scala 50:15]
            else :
              node _T_5 = eq(UInt<7>("h63"), opcode) @[Inst2ImmUnit.scala 32:18]
              when _T_5 : @[Inst2ImmUnit.scala 32:18]
                node _immWire_T_35 = bits(io.inst, 31, 31) @[Inst2ImmUnit.scala 55:43]
                node _immWire_T_36 = bits(_immWire_T_35, 0, 0) @[Bitwise.scala 77:15]
                node _immWire_T_37 = mux(_immWire_T_36, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 77:12]
                node _immWire_T_38 = bits(io.inst, 7, 7) @[Inst2ImmUnit.scala 55:57]
                node _immWire_T_39 = bits(io.inst, 30, 25) @[Inst2ImmUnit.scala 55:69]
                node _immWire_T_40 = bits(io.inst, 11, 8) @[Inst2ImmUnit.scala 55:85]
                node immWire_lo_5 = cat(_immWire_T_40, UInt<1>("h0")) @[Cat.scala 33:92]
                node immWire_hi_hi = cat(_immWire_T_37, _immWire_T_38) @[Cat.scala 33:92]
                node immWire_hi_5 = cat(immWire_hi_hi, _immWire_T_39) @[Cat.scala 33:92]
                node _immWire_T_41 = cat(immWire_hi_5, immWire_lo_5) @[Cat.scala 33:92]
                immWire <= _immWire_T_41 @[Inst2ImmUnit.scala 55:15]
              else :
                node _T_6 = eq(UInt<6>("h37"), opcode) @[Inst2ImmUnit.scala 32:18]
                when _T_6 : @[Inst2ImmUnit.scala 32:18]
                  node _immWire_T_42 = bits(io.inst, 31, 31) @[Inst2ImmUnit.scala 60:43]
                  node _immWire_T_43 = bits(_immWire_T_42, 0, 0) @[Bitwise.scala 77:15]
                  node _immWire_T_44 = mux(_immWire_T_43, UInt<33>("h1ffffffff"), UInt<33>("h0")) @[Bitwise.scala 77:12]
                  node _immWire_T_45 = bits(io.inst, 30, 20) @[Inst2ImmUnit.scala 60:57]
                  node _immWire_T_46 = bits(io.inst, 19, 12) @[Inst2ImmUnit.scala 60:73]
                  node _immWire_T_47 = mux(UInt<1>("h0"), UInt<12>("hfff"), UInt<12>("h0")) @[Bitwise.scala 77:12]
                  node immWire_lo_6 = cat(_immWire_T_46, _immWire_T_47) @[Cat.scala 33:92]
                  node immWire_hi_6 = cat(_immWire_T_44, _immWire_T_45) @[Cat.scala 33:92]
                  node _immWire_T_48 = cat(immWire_hi_6, immWire_lo_6) @[Cat.scala 33:92]
                  immWire <= _immWire_T_48 @[Inst2ImmUnit.scala 60:15]
                else :
                  node _T_7 = eq(UInt<5>("h17"), opcode) @[Inst2ImmUnit.scala 32:18]
                  when _T_7 : @[Inst2ImmUnit.scala 32:18]
                    node _immWire_T_49 = bits(io.inst, 31, 31) @[Inst2ImmUnit.scala 63:43]
                    node _immWire_T_50 = bits(_immWire_T_49, 0, 0) @[Bitwise.scala 77:15]
                    node _immWire_T_51 = mux(_immWire_T_50, UInt<33>("h1ffffffff"), UInt<33>("h0")) @[Bitwise.scala 77:12]
                    node _immWire_T_52 = bits(io.inst, 30, 20) @[Inst2ImmUnit.scala 63:57]
                    node _immWire_T_53 = bits(io.inst, 19, 12) @[Inst2ImmUnit.scala 63:73]
                    node _immWire_T_54 = mux(UInt<1>("h0"), UInt<12>("hfff"), UInt<12>("h0")) @[Bitwise.scala 77:12]
                    node immWire_lo_7 = cat(_immWire_T_53, _immWire_T_54) @[Cat.scala 33:92]
                    node immWire_hi_7 = cat(_immWire_T_51, _immWire_T_52) @[Cat.scala 33:92]
                    node _immWire_T_55 = cat(immWire_hi_7, immWire_lo_7) @[Cat.scala 33:92]
                    immWire <= _immWire_T_55 @[Inst2ImmUnit.scala 63:15]
                  else :
                    node _T_8 = eq(UInt<7>("h6f"), opcode) @[Inst2ImmUnit.scala 32:18]
                    when _T_8 : @[Inst2ImmUnit.scala 32:18]
                      node _immWire_T_56 = bits(io.inst, 31, 31) @[Inst2ImmUnit.scala 68:43]
                      node _immWire_T_57 = bits(_immWire_T_56, 0, 0) @[Bitwise.scala 77:15]
                      node _immWire_T_58 = mux(_immWire_T_57, UInt<44>("hfffffffffff"), UInt<44>("h0")) @[Bitwise.scala 77:12]
                      node _immWire_T_59 = bits(io.inst, 19, 12) @[Inst2ImmUnit.scala 68:57]
                      node _immWire_T_60 = bits(io.inst, 20, 20) @[Inst2ImmUnit.scala 68:73]
                      node _immWire_T_61 = bits(io.inst, 30, 25) @[Inst2ImmUnit.scala 68:86]
                      node _immWire_T_62 = bits(io.inst, 24, 21) @[Inst2ImmUnit.scala 68:102]
                      node immWire_lo_hi = cat(_immWire_T_61, _immWire_T_62) @[Cat.scala 33:92]
                      node immWire_lo_8 = cat(immWire_lo_hi, UInt<1>("h0")) @[Cat.scala 33:92]
                      node immWire_hi_hi_1 = cat(_immWire_T_58, _immWire_T_59) @[Cat.scala 33:92]
                      node immWire_hi_8 = cat(immWire_hi_hi_1, _immWire_T_60) @[Cat.scala 33:92]
                      node _immWire_T_63 = cat(immWire_hi_8, immWire_lo_8) @[Cat.scala 33:92]
                      immWire <= _immWire_T_63 @[Inst2ImmUnit.scala 68:15]
    io.imm <= immWire @[Inst2ImmUnit.scala 73:10]
    node inst32 = bits(io.inst, 31, 0) @[Inst2ImmUnit.scala 75:23]

  module RegUnitWithForwarding :
    input clock : Clock
    input reset : Reset
    output io : { flip rs1 : UInt<5>, flip rs2 : UInt<5>, flip rd : UInt<5>, flip writeEnable : UInt<1>, flip writeData : UInt<64>, readDataRs1 : UInt<64>, readDataRs2 : UInt<64>, regAll : UInt<64>[32]}

    wire _regGroup_WIRE : UInt<64>[32] @[RegUnit.scala 74:33]
    _regGroup_WIRE[0] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[1] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[2] <= UInt<64>("h400") @[RegUnit.scala 74:33]
    _regGroup_WIRE[3] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[4] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[5] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[6] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[7] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[8] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[9] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[10] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[11] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[12] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[13] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[14] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[15] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[16] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[17] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[18] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[19] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[20] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[21] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[22] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[23] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[24] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[25] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[26] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[27] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[28] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[29] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[30] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    _regGroup_WIRE[31] <= UInt<64>("h0") @[RegUnit.scala 74:33]
    reg regGroup : UInt<64>[32], clock with :
      reset => (reset, _regGroup_WIRE) @[RegUnit.scala 74:25]
    wire readDataRs1 : UInt<64>
    readDataRs1 <= UInt<64>("h0")
    wire readDataRs2 : UInt<64>
    readDataRs2 <= UInt<64>("h0")
    node _io_readDataRs1_T = eq(io.rs1, UInt<1>("h0")) @[RegUnit.scala 100:32]
    node _io_readDataRs1_T_1 = mux(_io_readDataRs1_T, UInt<1>("h0"), readDataRs1) @[RegUnit.scala 100:24]
    io.readDataRs1 <= _io_readDataRs1_T_1 @[RegUnit.scala 100:18]
    node _io_readDataRs2_T = eq(io.rs2, UInt<1>("h0")) @[RegUnit.scala 101:32]
    node _io_readDataRs2_T_1 = mux(_io_readDataRs2_T, UInt<1>("h0"), readDataRs2) @[RegUnit.scala 101:24]
    io.readDataRs2 <= _io_readDataRs2_T_1 @[RegUnit.scala 101:18]
    node _T = eq(io.writeEnable, UInt<1>("h1")) @[RegUnit.scala 110:23]
    node _T_1 = neq(io.rd, UInt<1>("h0")) @[RegUnit.scala 110:43]
    node _T_2 = and(_T, _T_1) @[RegUnit.scala 110:34]
    when _T_2 : @[RegUnit.scala 110:52]
      regGroup[io.rd] <= io.writeData @[RegUnit.scala 111:21]
    io.regAll[0] <= UInt<1>("h0") @[RegUnit.scala 114:16]
    io.regAll[1] <= regGroup[1] @[RegUnit.scala 116:18]
    io.regAll[2] <= regGroup[2] @[RegUnit.scala 116:18]
    io.regAll[3] <= regGroup[3] @[RegUnit.scala 116:18]
    io.regAll[4] <= regGroup[4] @[RegUnit.scala 116:18]
    io.regAll[5] <= regGroup[5] @[RegUnit.scala 116:18]
    io.regAll[6] <= regGroup[6] @[RegUnit.scala 116:18]
    io.regAll[7] <= regGroup[7] @[RegUnit.scala 116:18]
    io.regAll[8] <= regGroup[8] @[RegUnit.scala 116:18]
    io.regAll[9] <= regGroup[9] @[RegUnit.scala 116:18]
    io.regAll[10] <= regGroup[10] @[RegUnit.scala 116:18]
    io.regAll[11] <= regGroup[11] @[RegUnit.scala 116:18]
    io.regAll[12] <= regGroup[12] @[RegUnit.scala 116:18]
    io.regAll[13] <= regGroup[13] @[RegUnit.scala 116:18]
    io.regAll[14] <= regGroup[14] @[RegUnit.scala 116:18]
    io.regAll[15] <= regGroup[15] @[RegUnit.scala 116:18]
    io.regAll[16] <= regGroup[16] @[RegUnit.scala 116:18]
    io.regAll[17] <= regGroup[17] @[RegUnit.scala 116:18]
    io.regAll[18] <= regGroup[18] @[RegUnit.scala 116:18]
    io.regAll[19] <= regGroup[19] @[RegUnit.scala 116:18]
    io.regAll[20] <= regGroup[20] @[RegUnit.scala 116:18]
    io.regAll[21] <= regGroup[21] @[RegUnit.scala 116:18]
    io.regAll[22] <= regGroup[22] @[RegUnit.scala 116:18]
    io.regAll[23] <= regGroup[23] @[RegUnit.scala 116:18]
    io.regAll[24] <= regGroup[24] @[RegUnit.scala 116:18]
    io.regAll[25] <= regGroup[25] @[RegUnit.scala 116:18]
    io.regAll[26] <= regGroup[26] @[RegUnit.scala 116:18]
    io.regAll[27] <= regGroup[27] @[RegUnit.scala 116:18]
    io.regAll[28] <= regGroup[28] @[RegUnit.scala 116:18]
    io.regAll[29] <= regGroup[29] @[RegUnit.scala 116:18]
    io.regAll[30] <= regGroup[30] @[RegUnit.scala 116:18]
    io.regAll[31] <= regGroup[31] @[RegUnit.scala 116:18]
    node needAdd_0 = cat(UInt<1>("h0"), io.rs1) @[Cat.scala 33:92]
    node needAdd_1 = cat(UInt<1>("h0"), io.rs2) @[Cat.scala 33:92]
    node needAdd_2 = cat(UInt<1>("h0"), io.rd) @[Cat.scala 33:92]
    node _readDataRs1_T = eq(io.rs1, io.rd) @[RegUnit.scala 23:32]
    node _readDataRs1_T_1 = and(io.writeEnable, _readDataRs1_T) @[RegUnit.scala 23:21]
    node _readDataRs1_T_2 = mux(_readDataRs1_T_1, io.writeData, regGroup[io.rs1]) @[RegUnit.scala 22:21]
    readDataRs1 <= _readDataRs1_T_2 @[RegUnit.scala 22:15]
    node _readDataRs2_T = eq(io.rs2, io.rd) @[RegUnit.scala 29:32]
    node _readDataRs2_T_1 = and(io.writeEnable, _readDataRs2_T) @[RegUnit.scala 29:21]
    node _readDataRs2_T_2 = mux(_readDataRs2_T_1, io.writeData, regGroup[io.rs2]) @[RegUnit.scala 28:21]
    readDataRs2 <= _readDataRs2_T_2 @[RegUnit.scala 28:15]

  module ALUControlUnit :
    input clock : Clock
    input reset : Reset
    output io : { flip isBType : UInt<1>, flip isIType : UInt<1>, flip isRType : UInt<1>, flip isWord : UInt<1>, flip funct3 : UInt<3>, flip funct7 : UInt<7>, aluOperation : UInt<6>}

    wire combine : UInt<4>
    combine <= UInt<4>("h0")
    node _T = eq(io.isRType, UInt<1>("h1")) @[ALUControlUnit.scala 48:19]
    when _T : @[ALUControlUnit.scala 48:31]
      node _combine_T = bits(io.funct7, 5, 5) @[ALUControlUnit.scala 49:40]
      node _combine_T_1 = cat(io.funct3, _combine_T) @[Cat.scala 33:92]
      combine <= _combine_T_1 @[ALUControlUnit.scala 49:13]
    else :
      node _T_1 = eq(io.isBType, UInt<1>("h1")) @[ALUControlUnit.scala 50:25]
      when _T_1 : @[ALUControlUnit.scala 50:37]
        node _combine_T_2 = cat(io.funct3, UInt<1>("h0")) @[Cat.scala 33:92]
        combine <= _combine_T_2 @[ALUControlUnit.scala 51:13]
      else :
        node _T_2 = eq(io.isIType, UInt<1>("h1")) @[ALUControlUnit.scala 52:25]
        when _T_2 : @[ALUControlUnit.scala 52:37]
          node _T_3 = eq(io.funct3, UInt<3>("h5")) @[ALUControlUnit.scala 53:20]
          when _T_3 : @[ALUControlUnit.scala 53:34]
            node _combine_T_3 = bits(io.funct7, 5, 5) @[ALUControlUnit.scala 54:42]
            node _combine_T_4 = cat(io.funct3, _combine_T_3) @[Cat.scala 33:92]
            combine <= _combine_T_4 @[ALUControlUnit.scala 54:15]
          else :
            node _combine_T_5 = cat(io.funct3, UInt<1>("h0")) @[Cat.scala 33:92]
            combine <= _combine_T_5 @[ALUControlUnit.scala 56:15]
    node io_aluOperation_hi = cat(combine, io.isWord) @[Cat.scala 33:92]
    node _io_aluOperation_T = cat(io_aluOperation_hi, io.isBType) @[Cat.scala 33:92]
    io.aluOperation <= _io_aluOperation_T @[ALUControlUnit.scala 60:19]

  module PCSelectUnit :
    input clock : Clock
    input reset : Reset
    output io : { flip pcPlus4 : UInt<64>, flip pcPlusImm : UInt<64>, flip isJALR : UInt<1>, flip isBType : UInt<1>, flip isJump : UInt<1>, flip isTrue : UInt<1>, flip aluResult : UInt<64>, nextPC : UInt<64>, jump : UInt<1>}

    wire nextPC : UInt
    nextPC <= io.pcPlus4
    wire jump : UInt<1>
    jump <= UInt<1>("h0")
    node _T = eq(io.isJALR, UInt<1>("h1")) @[PCSelectUnit.scala 47:18]
    when _T : @[PCSelectUnit.scala 47:30]
      nextPC <= io.aluResult @[PCSelectUnit.scala 48:12]
      jump <= UInt<1>("h1") @[PCSelectUnit.scala 49:10]
    else :
      node _T_1 = and(io.isBType, io.isTrue) @[PCSelectUnit.scala 50:39]
      node _T_2 = or(io.isJump, _T_1) @[PCSelectUnit.scala 50:24]
      when _T_2 : @[PCSelectUnit.scala 50:54]
        nextPC <= io.pcPlusImm @[PCSelectUnit.scala 51:12]
        jump <= UInt<1>("h1") @[PCSelectUnit.scala 52:10]
    io.nextPC <= nextPC @[PCSelectUnit.scala 55:13]
    io.jump <= jump @[PCSelectUnit.scala 56:11]

  module ALU :
    input clock : Clock
    input reset : Reset
    output io : { flip aluOperation : UInt<6>, flip x : UInt<64>, flip y : UInt<64>, result : UInt<64>}

    node combine = bits(io.aluOperation, 5, 2) @[ALU.scala 36:32]
    node _isWord_T = bits(io.aluOperation, 1, 1) @[ALU.scala 37:31]
    node isWord = bits(_isWord_T, 0, 0) @[ALU.scala 37:35]
    node _isBType_T = bits(io.aluOperation, 0, 0) @[ALU.scala 38:32]
    node isBType = bits(_isBType_T, 0, 0) @[ALU.scala 38:36]
    node x32 = bits(io.x, 31, 0) @[ALU.scala 41:17]
    node y32 = bits(io.y, 31, 0) @[ALU.scala 42:17]
    node shamt = bits(io.y, 5, 0) @[ALU.scala 45:19]
    node shamtW = bits(io.y, 4, 0) @[ALU.scala 46:20]
    node _resWire_T = add(io.x, io.y) @[ALU.scala 48:34]
    wire resWire : UInt
    resWire <= _resWire_T
    node _T = eq(isBType, UInt<1>("h1")) @[ALU.scala 50:16]
    when _T : @[ALU.scala 50:28]
      node _T_1 = eq(UInt<1>("h0"), combine) @[ALU.scala 51:21]
      when _T_1 : @[ALU.scala 51:21]
        node _resWire_T_1 = eq(io.x, io.y) @[ALU.scala 54:25]
        resWire <= _resWire_T_1 @[ALU.scala 54:17]
      else :
        node _T_2 = eq(UInt<2>("h2"), combine) @[ALU.scala 51:21]
        when _T_2 : @[ALU.scala 51:21]
          node _resWire_T_2 = neq(io.x, io.y) @[ALU.scala 58:25]
          resWire <= _resWire_T_2 @[ALU.scala 58:17]
        else :
          node _T_3 = eq(UInt<4>("h8"), combine) @[ALU.scala 51:21]
          when _T_3 : @[ALU.scala 51:21]
            node _resWire_T_3 = asSInt(io.x) @[ALU.scala 62:26]
            node _resWire_T_4 = asSInt(io.y) @[ALU.scala 62:40]
            node _resWire_T_5 = lt(_resWire_T_3, _resWire_T_4) @[ALU.scala 62:33]
            resWire <= _resWire_T_5 @[ALU.scala 62:17]
          else :
            node _T_4 = eq(UInt<4>("ha"), combine) @[ALU.scala 51:21]
            when _T_4 : @[ALU.scala 51:21]
              node _resWire_T_6 = asSInt(io.x) @[ALU.scala 66:26]
              node _resWire_T_7 = asSInt(io.y) @[ALU.scala 66:41]
              node _resWire_T_8 = geq(_resWire_T_6, _resWire_T_7) @[ALU.scala 66:33]
              resWire <= _resWire_T_8 @[ALU.scala 66:17]
            else :
              node _T_5 = eq(UInt<4>("hc"), combine) @[ALU.scala 51:21]
              when _T_5 : @[ALU.scala 51:21]
                node _resWire_T_9 = lt(io.x, io.y) @[ALU.scala 70:26]
                resWire <= _resWire_T_9 @[ALU.scala 70:17]
              else :
                node _T_6 = eq(UInt<4>("he"), combine) @[ALU.scala 51:21]
                when _T_6 : @[ALU.scala 51:21]
                  node _resWire_T_10 = geq(io.x, io.y) @[ALU.scala 74:26]
                  resWire <= _resWire_T_10 @[ALU.scala 74:17]
    else :
      node _T_7 = eq(UInt<1>("h0"), combine) @[ALU.scala 78:21]
      when _T_7 : @[ALU.scala 78:21]
        node _T_8 = eq(isWord, UInt<1>("h1")) @[ALU.scala 81:21]
        when _T_8 : @[ALU.scala 81:33]
          node _resWire_T_11 = add(x32, y32) @[ALU.scala 82:43]
          node _resWire_T_12 = tail(_resWire_T_11, 1) @[ALU.scala 82:43]
          node resWire_sign = bits(_resWire_T_12, 31, 31) @[CPUUtils.scala 114:33]
          node _resWire_T_13 = bits(resWire_sign, 0, 0) @[Bitwise.scala 77:15]
          node _resWire_T_14 = mux(_resWire_T_13, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
          node _resWire_T_15 = bits(_resWire_T_12, 31, 0) @[CPUUtils.scala 115:36]
          node _resWire_T_16 = cat(_resWire_T_14, _resWire_T_15) @[Cat.scala 33:92]
          resWire <= _resWire_T_16 @[ALU.scala 82:19]
        else :
          node _resWire_T_17 = add(io.x, io.y) @[ALU.scala 84:27]
          node _resWire_T_18 = tail(_resWire_T_17, 1) @[ALU.scala 84:27]
          resWire <= _resWire_T_18 @[ALU.scala 84:19]
      else :
        node _T_9 = eq(UInt<1>("h1"), combine) @[ALU.scala 78:21]
        when _T_9 : @[ALU.scala 78:21]
          node _T_10 = eq(isWord, UInt<1>("h1")) @[ALU.scala 89:21]
          when _T_10 : @[ALU.scala 89:33]
            node _resWire_T_19 = sub(x32, y32) @[ALU.scala 90:43]
            node _resWire_T_20 = tail(_resWire_T_19, 1) @[ALU.scala 90:43]
            node resWire_sign_1 = bits(_resWire_T_20, 31, 31) @[CPUUtils.scala 114:33]
            node _resWire_T_21 = bits(resWire_sign_1, 0, 0) @[Bitwise.scala 77:15]
            node _resWire_T_22 = mux(_resWire_T_21, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
            node _resWire_T_23 = bits(_resWire_T_20, 31, 0) @[CPUUtils.scala 115:36]
            node _resWire_T_24 = cat(_resWire_T_22, _resWire_T_23) @[Cat.scala 33:92]
            resWire <= _resWire_T_24 @[ALU.scala 90:19]
          else :
            node _resWire_T_25 = sub(io.x, io.y) @[ALU.scala 92:27]
            node _resWire_T_26 = tail(_resWire_T_25, 1) @[ALU.scala 92:27]
            resWire <= _resWire_T_26 @[ALU.scala 92:19]
        else :
          node _T_11 = eq(UInt<2>("h2"), combine) @[ALU.scala 78:21]
          when _T_11 : @[ALU.scala 78:21]
            node _T_12 = eq(isWord, UInt<1>("h1")) @[ALU.scala 97:21]
            when _T_12 : @[ALU.scala 97:33]
              node _resWire_T_27 = dshl(x32, shamtW) @[ALU.scala 98:43]
              node resWire_sign_2 = bits(_resWire_T_27, 31, 31) @[CPUUtils.scala 114:33]
              node _resWire_T_28 = bits(resWire_sign_2, 0, 0) @[Bitwise.scala 77:15]
              node _resWire_T_29 = mux(_resWire_T_28, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
              node _resWire_T_30 = bits(_resWire_T_27, 31, 0) @[CPUUtils.scala 115:36]
              node _resWire_T_31 = cat(_resWire_T_29, _resWire_T_30) @[Cat.scala 33:92]
              resWire <= _resWire_T_31 @[ALU.scala 98:19]
            else :
              node _resWire_T_32 = dshl(io.x, shamt) @[ALU.scala 100:27]
              resWire <= _resWire_T_32 @[ALU.scala 100:19]
          else :
            node _T_13 = eq(UInt<3>("h4"), combine) @[ALU.scala 78:21]
            when _T_13 : @[ALU.scala 78:21]
              node _resWire_T_33 = asSInt(io.x) @[ALU.scala 105:26]
              node _resWire_T_34 = asSInt(io.y) @[ALU.scala 105:40]
              node _resWire_T_35 = lt(_resWire_T_33, _resWire_T_34) @[ALU.scala 105:33]
              resWire <= _resWire_T_35 @[ALU.scala 105:17]
            else :
              node _T_14 = eq(UInt<3>("h6"), combine) @[ALU.scala 78:21]
              when _T_14 : @[ALU.scala 78:21]
                node _resWire_T_36 = lt(io.x, io.y) @[ALU.scala 109:26]
                resWire <= _resWire_T_36 @[ALU.scala 109:17]
              else :
                node _T_15 = eq(UInt<4>("h8"), combine) @[ALU.scala 78:21]
                when _T_15 : @[ALU.scala 78:21]
                  node _resWire_T_37 = xor(io.x, io.y) @[ALU.scala 113:26]
                  resWire <= _resWire_T_37 @[ALU.scala 113:17]
                else :
                  node _T_16 = eq(UInt<4>("ha"), combine) @[ALU.scala 78:21]
                  when _T_16 : @[ALU.scala 78:21]
                    node _T_17 = eq(isWord, UInt<1>("h1")) @[ALU.scala 117:21]
                    when _T_17 : @[ALU.scala 117:33]
                      node _resWire_T_38 = dshr(x32, shamtW) @[ALU.scala 118:43]
                      node resWire_sign_3 = bits(_resWire_T_38, 31, 31) @[CPUUtils.scala 114:33]
                      node _resWire_T_39 = bits(resWire_sign_3, 0, 0) @[Bitwise.scala 77:15]
                      node _resWire_T_40 = mux(_resWire_T_39, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
                      node _resWire_T_41 = bits(_resWire_T_38, 31, 0) @[CPUUtils.scala 115:36]
                      node _resWire_T_42 = cat(_resWire_T_40, _resWire_T_41) @[Cat.scala 33:92]
                      resWire <= _resWire_T_42 @[ALU.scala 118:19]
                    else :
                      node _resWire_T_43 = dshr(io.x, shamt) @[ALU.scala 120:27]
                      resWire <= _resWire_T_43 @[ALU.scala 120:19]
                  else :
                    node _T_18 = eq(UInt<4>("hb"), combine) @[ALU.scala 78:21]
                    when _T_18 : @[ALU.scala 78:21]
                      node _T_19 = eq(isWord, UInt<1>("h1")) @[ALU.scala 125:21]
                      when _T_19 : @[ALU.scala 125:33]
                        node _resWire_T_44 = asSInt(x32) @[ALU.scala 127:18]
                        node _resWire_T_45 = dshr(_resWire_T_44, shamtW) @[ALU.scala 127:25]
                        node _resWire_T_46 = asUInt(_resWire_T_45) @[ALU.scala 127:36]
                        node resWire_sign_4 = bits(_resWire_T_46, 31, 31) @[CPUUtils.scala 114:33]
                        node _resWire_T_47 = bits(resWire_sign_4, 0, 0) @[Bitwise.scala 77:15]
                        node _resWire_T_48 = mux(_resWire_T_47, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
                        node _resWire_T_49 = bits(_resWire_T_46, 31, 0) @[CPUUtils.scala 115:36]
                        node _resWire_T_50 = cat(_resWire_T_48, _resWire_T_49) @[Cat.scala 33:92]
                        resWire <= _resWire_T_50 @[ALU.scala 126:19]
                      else :
                        node _resWire_T_51 = asSInt(io.x) @[ALU.scala 130:28]
                        node _resWire_T_52 = dshr(_resWire_T_51, shamt) @[ALU.scala 130:35]
                        node _resWire_T_53 = asUInt(_resWire_T_52) @[ALU.scala 130:45]
                        resWire <= _resWire_T_53 @[ALU.scala 130:19]
                    else :
                      node _T_20 = eq(UInt<4>("hc"), combine) @[ALU.scala 78:21]
                      when _T_20 : @[ALU.scala 78:21]
                        node _resWire_T_54 = or(io.x, io.y) @[ALU.scala 135:26]
                        resWire <= _resWire_T_54 @[ALU.scala 135:17]
                      else :
                        node _T_21 = eq(UInt<4>("he"), combine) @[ALU.scala 78:21]
                        when _T_21 : @[ALU.scala 78:21]
                          node _resWire_T_55 = and(io.x, io.y) @[ALU.scala 139:26]
                          resWire <= _resWire_T_55 @[ALU.scala 139:17]
    io.result <= resWire @[ALU.scala 144:13]

  module DataMemory :
    input clock : Clock
    input reset : Reset
    output io : { flip memRead : UInt<1>, flip memWrite : UInt<1>, flip address : UInt<64>, flip writeData : UInt<64>, flip bitType : UInt<2>, flip isUnsigned : UInt<1>, readData : UInt<64>}

    cmem dataMem : UInt<8>[8] [4096] @[DataMemory.scala 51:20]
    node address = shr(io.address, 3) @[DataMemory.scala 54:28]
    node index = and(io.address, UInt<3>("h7")) @[DataMemory.scala 55:26]
    node _readDataRaw_T = bits(address, 11, 0) @[DataMemory.scala 62:33]
    read mport readDataRaw_MPORT = dataMem[_readDataRaw_T], clock @[DataMemory.scala 62:33]
    node readDataRaw_lo_lo = cat(readDataRaw_MPORT[1], readDataRaw_MPORT[0]) @[DataMemory.scala 62:43]
    node readDataRaw_lo_hi = cat(readDataRaw_MPORT[3], readDataRaw_MPORT[2]) @[DataMemory.scala 62:43]
    node readDataRaw_lo = cat(readDataRaw_lo_hi, readDataRaw_lo_lo) @[DataMemory.scala 62:43]
    node readDataRaw_hi_lo = cat(readDataRaw_MPORT[5], readDataRaw_MPORT[4]) @[DataMemory.scala 62:43]
    node readDataRaw_hi_hi = cat(readDataRaw_MPORT[7], readDataRaw_MPORT[6]) @[DataMemory.scala 62:43]
    node readDataRaw_hi = cat(readDataRaw_hi_hi, readDataRaw_hi_lo) @[DataMemory.scala 62:43]
    node readDataRaw = cat(readDataRaw_hi, readDataRaw_lo) @[DataMemory.scala 62:43]
    wire readDataIntercept : UInt<64>
    readDataIntercept <= UInt<64>("h0")
    node _T = eq(index, UInt<1>("h0")) @[DataMemory.scala 66:14]
    when _T : @[DataMemory.scala 66:23]
      node _readDataIntercept_T = bits(readDataRaw, 63, 0) @[DataMemory.scala 67:37]
      readDataIntercept <= _readDataIntercept_T @[DataMemory.scala 67:23]
    node _T_1 = eq(index, UInt<1>("h1")) @[DataMemory.scala 70:16]
    when _T_1 : @[DataMemory.scala 70:25]
      node _readDataIntercept_T_1 = bits(readDataRaw, 63, 8) @[DataMemory.scala 73:20]
      node _readDataIntercept_T_2 = cat(UInt<8>("h0"), _readDataIntercept_T_1) @[Cat.scala 33:92]
      readDataIntercept <= _readDataIntercept_T_2 @[DataMemory.scala 71:25]
    node _T_2 = eq(index, UInt<2>("h2")) @[DataMemory.scala 70:16]
    when _T_2 : @[DataMemory.scala 70:25]
      node _readDataIntercept_T_3 = bits(readDataRaw, 63, 16) @[DataMemory.scala 73:20]
      node _readDataIntercept_T_4 = cat(UInt<16>("h0"), _readDataIntercept_T_3) @[Cat.scala 33:92]
      readDataIntercept <= _readDataIntercept_T_4 @[DataMemory.scala 71:25]
    node _T_3 = eq(index, UInt<2>("h3")) @[DataMemory.scala 70:16]
    when _T_3 : @[DataMemory.scala 70:25]
      node _readDataIntercept_T_5 = bits(readDataRaw, 63, 24) @[DataMemory.scala 73:20]
      node _readDataIntercept_T_6 = cat(UInt<24>("h0"), _readDataIntercept_T_5) @[Cat.scala 33:92]
      readDataIntercept <= _readDataIntercept_T_6 @[DataMemory.scala 71:25]
    node _T_4 = eq(index, UInt<3>("h4")) @[DataMemory.scala 70:16]
    when _T_4 : @[DataMemory.scala 70:25]
      node _readDataIntercept_T_7 = bits(readDataRaw, 63, 32) @[DataMemory.scala 73:20]
      node _readDataIntercept_T_8 = cat(UInt<32>("h0"), _readDataIntercept_T_7) @[Cat.scala 33:92]
      readDataIntercept <= _readDataIntercept_T_8 @[DataMemory.scala 71:25]
    node _T_5 = eq(index, UInt<3>("h5")) @[DataMemory.scala 70:16]
    when _T_5 : @[DataMemory.scala 70:25]
      node _readDataIntercept_T_9 = bits(readDataRaw, 63, 40) @[DataMemory.scala 73:20]
      node _readDataIntercept_T_10 = cat(UInt<40>("h0"), _readDataIntercept_T_9) @[Cat.scala 33:92]
      readDataIntercept <= _readDataIntercept_T_10 @[DataMemory.scala 71:25]
    node _T_6 = eq(index, UInt<3>("h6")) @[DataMemory.scala 70:16]
    when _T_6 : @[DataMemory.scala 70:25]
      node _readDataIntercept_T_11 = bits(readDataRaw, 63, 48) @[DataMemory.scala 73:20]
      node _readDataIntercept_T_12 = cat(UInt<48>("h0"), _readDataIntercept_T_11) @[Cat.scala 33:92]
      readDataIntercept <= _readDataIntercept_T_12 @[DataMemory.scala 71:25]
    node _T_7 = eq(index, UInt<3>("h7")) @[DataMemory.scala 70:16]
    when _T_7 : @[DataMemory.scala 70:25]
      node _readDataIntercept_T_13 = bits(readDataRaw, 63, 56) @[DataMemory.scala 73:20]
      node _readDataIntercept_T_14 = cat(UInt<56>("h0"), _readDataIntercept_T_13) @[Cat.scala 33:92]
      readDataIntercept <= _readDataIntercept_T_14 @[DataMemory.scala 71:25]
    wire readDataMasked : UInt<64>
    readDataMasked <= UInt<64>("h0")
    node _T_8 = eq(io.memRead, UInt<1>("h1")) @[DataMemory.scala 80:19]
    when _T_8 : @[DataMemory.scala 80:31]
      node _T_9 = eq(io.bitType, UInt<2>("h3")) @[DataMemory.scala 81:21]
      when _T_9 : @[DataMemory.scala 81:34]
        readDataMasked <= readDataIntercept @[DataMemory.scala 82:22]
      else :
        node _T_10 = eq(io.isUnsigned, UInt<1>("h1")) @[DataMemory.scala 84:26]
        when _T_10 : @[DataMemory.scala 84:38]
          node _T_11 = eq(UInt<1>("h0"), io.bitType) @[DataMemory.scala 85:28]
          when _T_11 : @[DataMemory.scala 85:28]
            node _readDataMasked_T = mux(UInt<1>("h0"), UInt<56>("hffffffffffffff"), UInt<56>("h0")) @[Bitwise.scala 77:12]
            node _readDataMasked_T_1 = bits(readDataIntercept, 7, 0) @[CPUUtils.scala 115:36]
            node _readDataMasked_T_2 = cat(_readDataMasked_T, _readDataMasked_T_1) @[Cat.scala 33:92]
            readDataMasked <= _readDataMasked_T_2 @[DataMemory.scala 86:40]
          else :
            node _T_12 = eq(UInt<1>("h1"), io.bitType) @[DataMemory.scala 85:28]
            when _T_12 : @[DataMemory.scala 85:28]
              node _readDataMasked_T_3 = mux(UInt<1>("h0"), UInt<48>("hffffffffffff"), UInt<48>("h0")) @[Bitwise.scala 77:12]
              node _readDataMasked_T_4 = bits(readDataIntercept, 15, 0) @[CPUUtils.scala 115:36]
              node _readDataMasked_T_5 = cat(_readDataMasked_T_3, _readDataMasked_T_4) @[Cat.scala 33:92]
              readDataMasked <= _readDataMasked_T_5 @[DataMemory.scala 88:28]
            else :
              node _T_13 = eq(UInt<2>("h2"), io.bitType) @[DataMemory.scala 85:28]
              when _T_13 : @[DataMemory.scala 85:28]
                node _readDataMasked_T_6 = mux(UInt<1>("h0"), UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
                node _readDataMasked_T_7 = bits(readDataIntercept, 31, 0) @[CPUUtils.scala 115:36]
                node _readDataMasked_T_8 = cat(_readDataMasked_T_6, _readDataMasked_T_7) @[Cat.scala 33:92]
                readDataMasked <= _readDataMasked_T_8 @[DataMemory.scala 91:28]
        else :
          node _T_14 = eq(UInt<1>("h0"), io.bitType) @[DataMemory.scala 95:28]
          when _T_14 : @[DataMemory.scala 95:28]
            node readDataMasked_sign = bits(readDataIntercept, 7, 7) @[CPUUtils.scala 114:33]
            node _readDataMasked_T_9 = bits(readDataMasked_sign, 0, 0) @[Bitwise.scala 77:15]
            node _readDataMasked_T_10 = mux(_readDataMasked_T_9, UInt<56>("hffffffffffffff"), UInt<56>("h0")) @[Bitwise.scala 77:12]
            node _readDataMasked_T_11 = bits(readDataIntercept, 7, 0) @[CPUUtils.scala 115:36]
            node _readDataMasked_T_12 = cat(_readDataMasked_T_10, _readDataMasked_T_11) @[Cat.scala 33:92]
            readDataMasked <= _readDataMasked_T_12 @[DataMemory.scala 96:40]
          else :
            node _T_15 = eq(UInt<1>("h1"), io.bitType) @[DataMemory.scala 95:28]
            when _T_15 : @[DataMemory.scala 95:28]
              node readDataMasked_sign_1 = bits(readDataIntercept, 15, 15) @[CPUUtils.scala 114:33]
              node _readDataMasked_T_13 = bits(readDataMasked_sign_1, 0, 0) @[Bitwise.scala 77:15]
              node _readDataMasked_T_14 = mux(_readDataMasked_T_13, UInt<48>("hffffffffffff"), UInt<48>("h0")) @[Bitwise.scala 77:12]
              node _readDataMasked_T_15 = bits(readDataIntercept, 15, 0) @[CPUUtils.scala 115:36]
              node _readDataMasked_T_16 = cat(_readDataMasked_T_14, _readDataMasked_T_15) @[Cat.scala 33:92]
              readDataMasked <= _readDataMasked_T_16 @[DataMemory.scala 97:40]
            else :
              node _T_16 = eq(UInt<2>("h2"), io.bitType) @[DataMemory.scala 95:28]
              when _T_16 : @[DataMemory.scala 95:28]
                node readDataMasked_sign_2 = bits(readDataIntercept, 31, 31) @[CPUUtils.scala 114:33]
                node _readDataMasked_T_17 = bits(readDataMasked_sign_2, 0, 0) @[Bitwise.scala 77:15]
                node _readDataMasked_T_18 = mux(_readDataMasked_T_17, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
                node _readDataMasked_T_19 = bits(readDataIntercept, 31, 0) @[CPUUtils.scala 115:36]
                node _readDataMasked_T_20 = cat(_readDataMasked_T_18, _readDataMasked_T_19) @[Cat.scala 33:92]
                readDataMasked <= _readDataMasked_T_20 @[DataMemory.scala 98:40]
    io.readData <= readDataMasked @[DataMemory.scala 105:15]
    wire _writeData_WIRE : UInt<8>[8] @[DataMemory.scala 112:38]
    _writeData_WIRE[0] <= UInt<8>("h0") @[DataMemory.scala 112:38]
    _writeData_WIRE[1] <= UInt<8>("h0") @[DataMemory.scala 112:38]
    _writeData_WIRE[2] <= UInt<8>("h0") @[DataMemory.scala 112:38]
    _writeData_WIRE[3] <= UInt<8>("h0") @[DataMemory.scala 112:38]
    _writeData_WIRE[4] <= UInt<8>("h0") @[DataMemory.scala 112:38]
    _writeData_WIRE[5] <= UInt<8>("h0") @[DataMemory.scala 112:38]
    _writeData_WIRE[6] <= UInt<8>("h0") @[DataMemory.scala 112:38]
    _writeData_WIRE[7] <= UInt<8>("h0") @[DataMemory.scala 112:38]
    wire writeData : UInt<8>[8]
    writeData <= _writeData_WIRE
    wire _mask_WIRE : UInt<1>[8] @[DataMemory.scala 115:33]
    _mask_WIRE[0] <= UInt<1>("h0") @[DataMemory.scala 115:33]
    _mask_WIRE[1] <= UInt<1>("h0") @[DataMemory.scala 115:33]
    _mask_WIRE[2] <= UInt<1>("h0") @[DataMemory.scala 115:33]
    _mask_WIRE[3] <= UInt<1>("h0") @[DataMemory.scala 115:33]
    _mask_WIRE[4] <= UInt<1>("h0") @[DataMemory.scala 115:33]
    _mask_WIRE[5] <= UInt<1>("h0") @[DataMemory.scala 115:33]
    _mask_WIRE[6] <= UInt<1>("h0") @[DataMemory.scala 115:33]
    _mask_WIRE[7] <= UInt<1>("h0") @[DataMemory.scala 115:33]
    wire mask : UInt<1>[8]
    mask <= _mask_WIRE
    node _T_17 = eq(index, UInt<1>("h0")) @[DataMemory.scala 131:16]
    when _T_17 : @[DataMemory.scala 131:29]
      node _writeData_0_T = bits(io.writeData, 7, 0) @[DataMemory.scala 136:37]
      writeData[0] <= _writeData_0_T @[DataMemory.scala 136:22]
      node _writeData_1_T = bits(io.writeData, 15, 8) @[DataMemory.scala 136:37]
      writeData[1] <= _writeData_1_T @[DataMemory.scala 136:22]
      node _writeData_2_T = bits(io.writeData, 23, 16) @[DataMemory.scala 136:37]
      writeData[2] <= _writeData_2_T @[DataMemory.scala 136:22]
      node _writeData_3_T = bits(io.writeData, 31, 24) @[DataMemory.scala 136:37]
      writeData[3] <= _writeData_3_T @[DataMemory.scala 136:22]
      node _writeData_4_T = bits(io.writeData, 39, 32) @[DataMemory.scala 136:37]
      writeData[4] <= _writeData_4_T @[DataMemory.scala 136:22]
      node _writeData_5_T = bits(io.writeData, 47, 40) @[DataMemory.scala 136:37]
      writeData[5] <= _writeData_5_T @[DataMemory.scala 136:22]
      node _writeData_6_T = bits(io.writeData, 55, 48) @[DataMemory.scala 136:37]
      writeData[6] <= _writeData_6_T @[DataMemory.scala 136:22]
      node _writeData_7_T = bits(io.writeData, 63, 56) @[DataMemory.scala 136:37]
      writeData[7] <= _writeData_7_T @[DataMemory.scala 136:22]
      node _T_18 = eq(UInt<1>("h0"), io.bitType) @[DataMemory.scala 141:26]
      when _T_18 : @[DataMemory.scala 141:26]
        mask[0] <= UInt<1>("h1") @[DataMemory.scala 123:45]
        mask[1] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[2] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[3] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[4] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[5] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
      else :
        node _T_19 = eq(UInt<1>("h1"), io.bitType) @[DataMemory.scala 141:26]
        when _T_19 : @[DataMemory.scala 141:26]
          mask[0] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[1] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[2] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[3] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[4] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[5] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        else :
          node _T_20 = eq(UInt<2>("h2"), io.bitType) @[DataMemory.scala 141:26]
          when _T_20 : @[DataMemory.scala 141:26]
            mask[0] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[1] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[2] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[3] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[4] <= UInt<1>("h0") @[DataMemory.scala 124:49]
            mask[5] <= UInt<1>("h0") @[DataMemory.scala 124:49]
            mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
            mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          else :
            node _T_21 = eq(UInt<2>("h3"), io.bitType) @[DataMemory.scala 141:26]
            when _T_21 : @[DataMemory.scala 141:26]
              mask[0] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[1] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[2] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[3] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
    node _T_22 = eq(index, UInt<1>("h1")) @[DataMemory.scala 131:16]
    when _T_22 : @[DataMemory.scala 131:29]
      writeData[0] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      node _writeData_1_T_1 = bits(io.writeData, 7, 0) @[DataMemory.scala 136:37]
      writeData[1] <= _writeData_1_T_1 @[DataMemory.scala 136:22]
      node _writeData_2_T_1 = bits(io.writeData, 15, 8) @[DataMemory.scala 136:37]
      writeData[2] <= _writeData_2_T_1 @[DataMemory.scala 136:22]
      node _writeData_3_T_1 = bits(io.writeData, 23, 16) @[DataMemory.scala 136:37]
      writeData[3] <= _writeData_3_T_1 @[DataMemory.scala 136:22]
      node _writeData_4_T_1 = bits(io.writeData, 31, 24) @[DataMemory.scala 136:37]
      writeData[4] <= _writeData_4_T_1 @[DataMemory.scala 136:22]
      node _writeData_5_T_1 = bits(io.writeData, 39, 32) @[DataMemory.scala 136:37]
      writeData[5] <= _writeData_5_T_1 @[DataMemory.scala 136:22]
      node _writeData_6_T_1 = bits(io.writeData, 47, 40) @[DataMemory.scala 136:37]
      writeData[6] <= _writeData_6_T_1 @[DataMemory.scala 136:22]
      node _writeData_7_T_1 = bits(io.writeData, 55, 48) @[DataMemory.scala 136:37]
      writeData[7] <= _writeData_7_T_1 @[DataMemory.scala 136:22]
      node _T_23 = eq(UInt<1>("h0"), io.bitType) @[DataMemory.scala 141:26]
      when _T_23 : @[DataMemory.scala 141:26]
        mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[1] <= UInt<1>("h1") @[DataMemory.scala 123:45]
        mask[2] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[3] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[4] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[5] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
      else :
        node _T_24 = eq(UInt<1>("h1"), io.bitType) @[DataMemory.scala 141:26]
        when _T_24 : @[DataMemory.scala 141:26]
          mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[1] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[2] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[3] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[4] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[5] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        else :
          node _T_25 = eq(UInt<2>("h2"), io.bitType) @[DataMemory.scala 141:26]
          when _T_25 : @[DataMemory.scala 141:26]
            mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[1] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[2] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[3] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[5] <= UInt<1>("h0") @[DataMemory.scala 124:49]
            mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
            mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          else :
            node _T_26 = eq(UInt<2>("h3"), io.bitType) @[DataMemory.scala 141:26]
            when _T_26 : @[DataMemory.scala 141:26]
              mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[1] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[2] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[3] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
    node _T_27 = eq(index, UInt<2>("h2")) @[DataMemory.scala 131:16]
    when _T_27 : @[DataMemory.scala 131:29]
      writeData[0] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[1] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      node _writeData_2_T_2 = bits(io.writeData, 7, 0) @[DataMemory.scala 136:37]
      writeData[2] <= _writeData_2_T_2 @[DataMemory.scala 136:22]
      node _writeData_3_T_2 = bits(io.writeData, 15, 8) @[DataMemory.scala 136:37]
      writeData[3] <= _writeData_3_T_2 @[DataMemory.scala 136:22]
      node _writeData_4_T_2 = bits(io.writeData, 23, 16) @[DataMemory.scala 136:37]
      writeData[4] <= _writeData_4_T_2 @[DataMemory.scala 136:22]
      node _writeData_5_T_2 = bits(io.writeData, 31, 24) @[DataMemory.scala 136:37]
      writeData[5] <= _writeData_5_T_2 @[DataMemory.scala 136:22]
      node _writeData_6_T_2 = bits(io.writeData, 39, 32) @[DataMemory.scala 136:37]
      writeData[6] <= _writeData_6_T_2 @[DataMemory.scala 136:22]
      node _writeData_7_T_2 = bits(io.writeData, 47, 40) @[DataMemory.scala 136:37]
      writeData[7] <= _writeData_7_T_2 @[DataMemory.scala 136:22]
      node _T_28 = eq(UInt<1>("h0"), io.bitType) @[DataMemory.scala 141:26]
      when _T_28 : @[DataMemory.scala 141:26]
        mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[2] <= UInt<1>("h1") @[DataMemory.scala 123:45]
        mask[3] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[4] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[5] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
      else :
        node _T_29 = eq(UInt<1>("h1"), io.bitType) @[DataMemory.scala 141:26]
        when _T_29 : @[DataMemory.scala 141:26]
          mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[2] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[3] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[4] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[5] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        else :
          node _T_30 = eq(UInt<2>("h2"), io.bitType) @[DataMemory.scala 141:26]
          when _T_30 : @[DataMemory.scala 141:26]
            mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[2] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[3] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
            mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          else :
            node _T_31 = eq(UInt<2>("h3"), io.bitType) @[DataMemory.scala 141:26]
            when _T_31 : @[DataMemory.scala 141:26]
              mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[2] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[3] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
    node _T_32 = eq(index, UInt<2>("h3")) @[DataMemory.scala 131:16]
    when _T_32 : @[DataMemory.scala 131:29]
      writeData[0] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[1] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[2] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      node _writeData_3_T_3 = bits(io.writeData, 7, 0) @[DataMemory.scala 136:37]
      writeData[3] <= _writeData_3_T_3 @[DataMemory.scala 136:22]
      node _writeData_4_T_3 = bits(io.writeData, 15, 8) @[DataMemory.scala 136:37]
      writeData[4] <= _writeData_4_T_3 @[DataMemory.scala 136:22]
      node _writeData_5_T_3 = bits(io.writeData, 23, 16) @[DataMemory.scala 136:37]
      writeData[5] <= _writeData_5_T_3 @[DataMemory.scala 136:22]
      node _writeData_6_T_3 = bits(io.writeData, 31, 24) @[DataMemory.scala 136:37]
      writeData[6] <= _writeData_6_T_3 @[DataMemory.scala 136:22]
      node _writeData_7_T_3 = bits(io.writeData, 39, 32) @[DataMemory.scala 136:37]
      writeData[7] <= _writeData_7_T_3 @[DataMemory.scala 136:22]
      node _T_33 = eq(UInt<1>("h0"), io.bitType) @[DataMemory.scala 141:26]
      when _T_33 : @[DataMemory.scala 141:26]
        mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[3] <= UInt<1>("h1") @[DataMemory.scala 123:45]
        mask[4] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[5] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
      else :
        node _T_34 = eq(UInt<1>("h1"), io.bitType) @[DataMemory.scala 141:26]
        when _T_34 : @[DataMemory.scala 141:26]
          mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[3] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[5] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        else :
          node _T_35 = eq(UInt<2>("h2"), io.bitType) @[DataMemory.scala 141:26]
          when _T_35 : @[DataMemory.scala 141:26]
            mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[3] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          else :
            node _T_36 = eq(UInt<2>("h3"), io.bitType) @[DataMemory.scala 141:26]
            when _T_36 : @[DataMemory.scala 141:26]
              mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[3] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
    node _T_37 = eq(index, UInt<3>("h4")) @[DataMemory.scala 131:16]
    when _T_37 : @[DataMemory.scala 131:29]
      writeData[0] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[1] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[2] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[3] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      node _writeData_4_T_4 = bits(io.writeData, 7, 0) @[DataMemory.scala 136:37]
      writeData[4] <= _writeData_4_T_4 @[DataMemory.scala 136:22]
      node _writeData_5_T_4 = bits(io.writeData, 15, 8) @[DataMemory.scala 136:37]
      writeData[5] <= _writeData_5_T_4 @[DataMemory.scala 136:22]
      node _writeData_6_T_4 = bits(io.writeData, 23, 16) @[DataMemory.scala 136:37]
      writeData[6] <= _writeData_6_T_4 @[DataMemory.scala 136:22]
      node _writeData_7_T_4 = bits(io.writeData, 31, 24) @[DataMemory.scala 136:37]
      writeData[7] <= _writeData_7_T_4 @[DataMemory.scala 136:22]
      node _T_38 = eq(UInt<1>("h0"), io.bitType) @[DataMemory.scala 141:26]
      when _T_38 : @[DataMemory.scala 141:26]
        mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
        mask[5] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
      else :
        node _T_39 = eq(UInt<1>("h1"), io.bitType) @[DataMemory.scala 141:26]
        when _T_39 : @[DataMemory.scala 141:26]
          mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
          mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        else :
          node _T_40 = eq(UInt<2>("h2"), io.bitType) @[DataMemory.scala 141:26]
          when _T_40 : @[DataMemory.scala 141:26]
            mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          else :
            node _T_41 = eq(UInt<2>("h3"), io.bitType) @[DataMemory.scala 141:26]
            when _T_41 : @[DataMemory.scala 141:26]
              mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[4] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
    node _T_42 = eq(index, UInt<3>("h5")) @[DataMemory.scala 131:16]
    when _T_42 : @[DataMemory.scala 131:29]
      writeData[0] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[1] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[2] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[3] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[4] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      node _writeData_5_T_5 = bits(io.writeData, 7, 0) @[DataMemory.scala 136:37]
      writeData[5] <= _writeData_5_T_5 @[DataMemory.scala 136:22]
      node _writeData_6_T_5 = bits(io.writeData, 15, 8) @[DataMemory.scala 136:37]
      writeData[6] <= _writeData_6_T_5 @[DataMemory.scala 136:22]
      node _writeData_7_T_5 = bits(io.writeData, 23, 16) @[DataMemory.scala 136:37]
      writeData[7] <= _writeData_7_T_5 @[DataMemory.scala 136:22]
      node _T_43 = eq(UInt<1>("h0"), io.bitType) @[DataMemory.scala 141:26]
      when _T_43 : @[DataMemory.scala 141:26]
        mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
        mask[6] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
      else :
        node _T_44 = eq(UInt<1>("h1"), io.bitType) @[DataMemory.scala 141:26]
        when _T_44 : @[DataMemory.scala 141:26]
          mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
        else :
          node _T_45 = eq(UInt<2>("h2"), io.bitType) @[DataMemory.scala 141:26]
          when _T_45 : @[DataMemory.scala 141:26]
            mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          else :
            node _T_46 = eq(UInt<2>("h3"), io.bitType) @[DataMemory.scala 141:26]
            when _T_46 : @[DataMemory.scala 141:26]
              mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[5] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
    node _T_47 = eq(index, UInt<3>("h6")) @[DataMemory.scala 131:16]
    when _T_47 : @[DataMemory.scala 131:29]
      writeData[0] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[1] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[2] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[3] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[4] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[5] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      node _writeData_6_T_6 = bits(io.writeData, 7, 0) @[DataMemory.scala 136:37]
      writeData[6] <= _writeData_6_T_6 @[DataMemory.scala 136:22]
      node _writeData_7_T_6 = bits(io.writeData, 15, 8) @[DataMemory.scala 136:37]
      writeData[7] <= _writeData_7_T_6 @[DataMemory.scala 136:22]
      node _T_48 = eq(UInt<1>("h0"), io.bitType) @[DataMemory.scala 141:26]
      when _T_48 : @[DataMemory.scala 141:26]
        mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[5] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
        mask[7] <= UInt<1>("h0") @[DataMemory.scala 124:49]
      else :
        node _T_49 = eq(UInt<1>("h1"), io.bitType) @[DataMemory.scala 141:26]
        when _T_49 : @[DataMemory.scala 141:26]
          mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[5] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
        else :
          node _T_50 = eq(UInt<2>("h2"), io.bitType) @[DataMemory.scala 141:26]
          when _T_50 : @[DataMemory.scala 141:26]
            mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[5] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
            mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          else :
            node _T_51 = eq(UInt<2>("h3"), io.bitType) @[DataMemory.scala 141:26]
            when _T_51 : @[DataMemory.scala 141:26]
              mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[5] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[6] <= UInt<1>("h1") @[DataMemory.scala 123:45]
              mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
    node _T_52 = eq(index, UInt<3>("h7")) @[DataMemory.scala 131:16]
    when _T_52 : @[DataMemory.scala 131:29]
      writeData[0] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[1] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[2] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[3] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[4] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[5] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      writeData[6] <= UInt<1>("h0") @[DataMemory.scala 133:22]
      node _writeData_7_T_7 = bits(io.writeData, 7, 0) @[DataMemory.scala 136:37]
      writeData[7] <= _writeData_7_T_7 @[DataMemory.scala 136:22]
      node _T_53 = eq(UInt<1>("h0"), io.bitType) @[DataMemory.scala 141:26]
      when _T_53 : @[DataMemory.scala 141:26]
        mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[5] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[6] <= UInt<1>("h0") @[DataMemory.scala 122:40]
        mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
      else :
        node _T_54 = eq(UInt<1>("h1"), io.bitType) @[DataMemory.scala 141:26]
        when _T_54 : @[DataMemory.scala 141:26]
          mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[5] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[6] <= UInt<1>("h0") @[DataMemory.scala 122:40]
          mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
        else :
          node _T_55 = eq(UInt<2>("h2"), io.bitType) @[DataMemory.scala 141:26]
          when _T_55 : @[DataMemory.scala 141:26]
            mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[5] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[6] <= UInt<1>("h0") @[DataMemory.scala 122:40]
            mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
          else :
            node _T_56 = eq(UInt<2>("h3"), io.bitType) @[DataMemory.scala 141:26]
            when _T_56 : @[DataMemory.scala 141:26]
              mask[0] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[1] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[2] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[3] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[4] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[5] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[6] <= UInt<1>("h0") @[DataMemory.scala 122:40]
              mask[7] <= UInt<1>("h1") @[DataMemory.scala 123:45]
    node _T_57 = eq(io.memWrite, UInt<1>("h1")) @[DataMemory.scala 159:20]
    when _T_57 : @[DataMemory.scala 159:32]
      node _T_58 = bits(address, 11, 0)
      write mport MPORT = dataMem[_T_58], clock
      when mask[0] :
        MPORT[0] <= writeData[0]
      when mask[1] :
        MPORT[1] <= writeData[1]
      when mask[2] :
        MPORT[2] <= writeData[2]
      when mask[3] :
        MPORT[3] <= writeData[3]
      when mask[4] :
        MPORT[4] <= writeData[4]
      when mask[5] :
        MPORT[5] <= writeData[5]
      when mask[6] :
        MPORT[6] <= writeData[6]
      when mask[7] :
        MPORT[7] <= writeData[7]

  module ResSelectUnit :
    input clock : Clock
    input reset : Reset
    output io : { flip isJump : UInt<1>, flip immALUToReg : UInt<1>, flip memRead : UInt<1>, flip readData : UInt<64>, flip aluResult : UInt<64>, flip imm : UInt<64>, flip pcPlus4 : UInt<64>, out : UInt<64>}

    wire resWire : UInt
    resWire <= io.aluResult
    node _T = eq(io.memRead, UInt<1>("h1")) @[ResSelectUnit.scala 43:19]
    when _T : @[ResSelectUnit.scala 43:31]
      resWire <= io.readData @[ResSelectUnit.scala 44:13]
    else :
      node _T_1 = eq(io.isJump, UInt<1>("h1")) @[ResSelectUnit.scala 45:24]
      when _T_1 : @[ResSelectUnit.scala 45:36]
        resWire <= io.pcPlus4 @[ResSelectUnit.scala 46:13]
      else :
        node _T_2 = eq(io.immALUToReg, UInt<1>("h1")) @[ResSelectUnit.scala 47:29]
        when _T_2 : @[ResSelectUnit.scala 47:41]
          resWire <= io.imm @[ResSelectUnit.scala 48:13]
    io.out <= resWire @[ResSelectUnit.scala 51:10]

  module IFIDStageRegs :
    input clock : Clock
    input reset : Reset
    output io : { flip stall : UInt<1>, flip flush : UInt<1>, flip in : { pc : UInt<64>, inst : UInt<32>}, out : { pc : UInt<64>, inst : UInt<32>}}

    wire _reg_WIRE : { pc : UInt<64>, inst : UInt<32>} @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.inst <= UInt<32>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.pc <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    reg reg : { pc : UInt<64>, inst : UInt<32>}, clock with :
      reset => (reset, _reg_WIRE) @[GeneralStageRegs.scala 43:20]
    when io.stall : @[GeneralStageRegs.scala 46:18]
      reg <= reg @[GeneralStageRegs.scala 47:9]
    else :
      reg <= io.in @[GeneralStageRegs.scala 49:9]
    when io.flush : @[GeneralStageRegs.scala 53:18]
      wire _io_out_WIRE : { pc : UInt<64>, inst : UInt<32>} @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.inst <= UInt<32>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.pc <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      io.out <= _io_out_WIRE @[GeneralStageRegs.scala 54:12]
    else :
      io.out <= reg @[GeneralStageRegs.scala 56:12]

  module IDEXEStageRegs :
    input clock : Clock
    input reset : Reset
    output io : { flip stall : UInt<1>, flip flush : UInt<1>, flip in : { pc : UInt<64>, inst : UInt<32>, isJALR : UInt<1>, isBType : UInt<1>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, writeEnable : UInt<1>, aluOperation : UInt<6>, readDataRs2 : UInt<64>, rd : UInt<5>, aluX : UInt<64>, aluY : UInt<64>, imm : UInt<64>}, out : { pc : UInt<64>, inst : UInt<32>, isJALR : UInt<1>, isBType : UInt<1>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, writeEnable : UInt<1>, aluOperation : UInt<6>, readDataRs2 : UInt<64>, rd : UInt<5>, aluX : UInt<64>, aluY : UInt<64>, imm : UInt<64>}}

    wire _reg_WIRE : { pc : UInt<64>, inst : UInt<32>, isJALR : UInt<1>, isBType : UInt<1>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, writeEnable : UInt<1>, aluOperation : UInt<6>, readDataRs2 : UInt<64>, rd : UInt<5>, aluX : UInt<64>, aluY : UInt<64>, imm : UInt<64>} @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.imm <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.aluY <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.aluX <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.rd <= UInt<5>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.readDataRs2 <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.aluOperation <= UInt<6>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.writeEnable <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.memWrite <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.memRead <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.immALUToReg <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.isJump <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.isBType <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.isJALR <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.inst <= UInt<32>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.pc <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    reg reg : { pc : UInt<64>, inst : UInt<32>, isJALR : UInt<1>, isBType : UInt<1>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, writeEnable : UInt<1>, aluOperation : UInt<6>, readDataRs2 : UInt<64>, rd : UInt<5>, aluX : UInt<64>, aluY : UInt<64>, imm : UInt<64>}, clock with :
      reset => (reset, _reg_WIRE) @[GeneralStageRegs.scala 43:20]
    when io.stall : @[GeneralStageRegs.scala 46:18]
      reg <= reg @[GeneralStageRegs.scala 47:9]
    else :
      reg <= io.in @[GeneralStageRegs.scala 49:9]
    when io.flush : @[GeneralStageRegs.scala 53:18]
      wire _io_out_WIRE : { pc : UInt<64>, inst : UInt<32>, isJALR : UInt<1>, isBType : UInt<1>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, writeEnable : UInt<1>, aluOperation : UInt<6>, readDataRs2 : UInt<64>, rd : UInt<5>, aluX : UInt<64>, aluY : UInt<64>, imm : UInt<64>} @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.imm <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.aluY <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.aluX <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.rd <= UInt<5>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.readDataRs2 <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.aluOperation <= UInt<6>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.writeEnable <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.memWrite <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.memRead <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.immALUToReg <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.isJump <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.isBType <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.isJALR <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.inst <= UInt<32>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.pc <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      io.out <= _io_out_WIRE @[GeneralStageRegs.scala 54:12]
    else :
      io.out <= reg @[GeneralStageRegs.scala 56:12]

  module EXEMEMStageRegs :
    input clock : Clock
    input reset : Reset
    output io : { flip stall : UInt<1>, flip flush : UInt<1>, flip in : { pc : UInt<64>, inst : UInt<32>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, writeEnable : UInt<1>, readDataRs2 : UInt<64>, rd : UInt<5>, aluResult : UInt<64>, imm : UInt<64>}, out : { pc : UInt<64>, inst : UInt<32>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, writeEnable : UInt<1>, readDataRs2 : UInt<64>, rd : UInt<5>, aluResult : UInt<64>, imm : UInt<64>}}

    wire _reg_WIRE : { pc : UInt<64>, inst : UInt<32>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, writeEnable : UInt<1>, readDataRs2 : UInt<64>, rd : UInt<5>, aluResult : UInt<64>, imm : UInt<64>} @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.imm <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.aluResult <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.rd <= UInt<5>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.readDataRs2 <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.writeEnable <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.memWrite <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.memRead <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.immALUToReg <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.isJump <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.inst <= UInt<32>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.pc <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    reg reg : { pc : UInt<64>, inst : UInt<32>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, writeEnable : UInt<1>, readDataRs2 : UInt<64>, rd : UInt<5>, aluResult : UInt<64>, imm : UInt<64>}, clock with :
      reset => (reset, _reg_WIRE) @[GeneralStageRegs.scala 43:20]
    when io.stall : @[GeneralStageRegs.scala 46:18]
      reg <= reg @[GeneralStageRegs.scala 47:9]
    else :
      reg <= io.in @[GeneralStageRegs.scala 49:9]
    when io.flush : @[GeneralStageRegs.scala 53:18]
      wire _io_out_WIRE : { pc : UInt<64>, inst : UInt<32>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, writeEnable : UInt<1>, readDataRs2 : UInt<64>, rd : UInt<5>, aluResult : UInt<64>, imm : UInt<64>} @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.imm <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.aluResult <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.rd <= UInt<5>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.readDataRs2 <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.writeEnable <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.memWrite <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.memRead <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.immALUToReg <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.isJump <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.inst <= UInt<32>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.pc <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      io.out <= _io_out_WIRE @[GeneralStageRegs.scala 54:12]
    else :
      io.out <= reg @[GeneralStageRegs.scala 56:12]

  module MEMWBStageRegs :
    input clock : Clock
    input reset : Reset
    output io : { flip stall : UInt<1>, flip flush : UInt<1>, flip in : { pc : UInt<64>, inst : UInt<32>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, writeEnable : UInt<1>, readData : UInt<64>, rd : UInt<5>, aluResult : UInt<64>, imm : UInt<64>}, out : { pc : UInt<64>, inst : UInt<32>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, writeEnable : UInt<1>, readData : UInt<64>, rd : UInt<5>, aluResult : UInt<64>, imm : UInt<64>}}

    wire _reg_WIRE : { pc : UInt<64>, inst : UInt<32>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, writeEnable : UInt<1>, readData : UInt<64>, rd : UInt<5>, aluResult : UInt<64>, imm : UInt<64>} @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.imm <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.aluResult <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.rd <= UInt<5>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.readData <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.writeEnable <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.memRead <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.immALUToReg <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.isJump <= UInt<1>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.inst <= UInt<32>("h0") @[GeneralStageRegs.scala 43:33]
    _reg_WIRE.pc <= UInt<64>("h0") @[GeneralStageRegs.scala 43:33]
    reg reg : { pc : UInt<64>, inst : UInt<32>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, writeEnable : UInt<1>, readData : UInt<64>, rd : UInt<5>, aluResult : UInt<64>, imm : UInt<64>}, clock with :
      reset => (reset, _reg_WIRE) @[GeneralStageRegs.scala 43:20]
    when io.stall : @[GeneralStageRegs.scala 46:18]
      reg <= reg @[GeneralStageRegs.scala 47:9]
    else :
      reg <= io.in @[GeneralStageRegs.scala 49:9]
    when io.flush : @[GeneralStageRegs.scala 53:18]
      wire _io_out_WIRE : { pc : UInt<64>, inst : UInt<32>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, writeEnable : UInt<1>, readData : UInt<64>, rd : UInt<5>, aluResult : UInt<64>, imm : UInt<64>} @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.imm <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.aluResult <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.rd <= UInt<5>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.readData <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.writeEnable <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.memRead <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.immALUToReg <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.isJump <= UInt<1>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.inst <= UInt<32>("h0") @[GeneralStageRegs.scala 54:27]
      _io_out_WIRE.pc <= UInt<64>("h0") @[GeneralStageRegs.scala 54:27]
      io.out <= _io_out_WIRE @[GeneralStageRegs.scala 54:12]
    else :
      io.out <= reg @[GeneralStageRegs.scala 56:12]

  module BranchPredictor :
    input clock : Clock
    input reset : Reset
    output io : { flip keep : UInt<1>, flip ifMayJump : UInt<1>, flip ifPC : UInt<64>, flip idPC : UInt<64>, flip exePC : UInt<64>, flip idInst : UInt<32>, flip exeInst : UInt<32>, flip selectPC : UInt<64>, flip jump : UInt<1>, nextPC : UInt<64>, flush : UInt<1>}

    cmem phtMem : UInt<2> [4096] @[BranchPredictor.scala 92:19]
    cmem btbMem : UInt<128> [64] @[BranchPredictor.scala 107:19]
    reg flushReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[BranchPredictor.scala 40:25]
    node _nextPC_T = add(io.ifPC, UInt<3>("h4")) @[BranchPredictor.scala 42:36]
    node _nextPC_T_1 = tail(_nextPC_T, 1) @[BranchPredictor.scala 42:36]
    wire nextPC : UInt
    nextPC <= _nextPC_T_1
    node ifPCIndex = shr(io.ifPC, 2) @[BranchPredictor.scala 44:27]
    node exePCIndex = shr(io.exePC, 2) @[BranchPredictor.scala 45:29]
    wire flush : UInt<1>
    flush <= UInt<1>("h0")
    flushReg <= flush @[BranchPredictor.scala 48:12]
    when io.keep : @[BranchPredictor.scala 51:17]
      nextPC <= io.ifPC @[BranchPredictor.scala 52:12]
    else :
      when io.ifMayJump : @[BranchPredictor.scala 54:24]
        node _historyState_T = bits(ifPCIndex, 11, 0) @[BranchPredictor.scala 56:55]
        read mport historyState = phtMem[_historyState_T], clock @[BranchPredictor.scala 95:16]
        node _T = asUInt(reset) @[BranchPredictor.scala 57:13]
        node _T_1 = eq(_T, UInt<1>("h0")) @[BranchPredictor.scala 57:13]
        when _T_1 : @[BranchPredictor.scala 57:13]
          printf(clock, UInt<1>("h1"), "[DEBUG] \u83B7\u53D6\u9971\u548C\u8BA1\u6570\u5668 : ifPC = %d, historyState = %d\n", io.ifPC, historyState) : printf @[BranchPredictor.scala 57:13]
        node _T_2 = bits(historyState, 1, 1) @[BranchPredictor.scala 60:24]
        node _T_3 = eq(_T_2, UInt<1>("h1")) @[BranchPredictor.scala 60:28]
        when _T_3 : @[BranchPredictor.scala 60:37]
          node _target_data_T = bits(ifPCIndex, 5, 0) @[BranchPredictor.scala 110:35]
          read mport target_data = btbMem[_target_data_T], clock @[BranchPredictor.scala 110:27]
          node target_pcSource = bits(target_data, 127, 64) @[BranchPredictor.scala 111:24]
          node _target_target_T = add(ifPCIndex, UInt<1>("h1")) @[BranchPredictor.scala 112:38]
          node _target_target_T_1 = tail(_target_target_T, 1) @[BranchPredictor.scala 112:38]
          wire target_target : UInt
          target_target <= _target_target_T_1
          node _target_T = shr(target_pcSource, 2) @[BranchPredictor.scala 113:20]
          node _target_T_1 = eq(_target_T, ifPCIndex) @[BranchPredictor.scala 113:43]
          when _target_T_1 : @[BranchPredictor.scala 113:56]
            node _target_target_T_2 = bits(target_data, 63, 0) @[BranchPredictor.scala 114:21]
            target_target <= _target_target_T_2 @[BranchPredictor.scala 114:14]
          node target = shl(target_target, 2) @[BranchPredictor.scala 116:12]
          nextPC <= target @[BranchPredictor.scala 63:16]
    node _T_4 = neq(io.idInst, UInt<1>("h0")) @[BranchPredictor.scala 70:16]
    node _T_5 = neq(io.exeInst, UInt<1>("h0")) @[BranchPredictor.scala 70:40]
    node _T_6 = and(_T_4, _T_5) @[BranchPredictor.scala 70:25]
    node _T_7 = neq(io.idPC, io.selectPC) @[BranchPredictor.scala 70:61]
    node _T_8 = and(_T_6, _T_7) @[BranchPredictor.scala 70:49]
    when _T_8 : @[BranchPredictor.scala 71:5]
      nextPC <= io.selectPC @[BranchPredictor.scala 72:12]
      flushReg <= UInt<1>("h1") @[BranchPredictor.scala 73:14]
    node _T_9 = bits(exePCIndex, 11, 0) @[BranchPredictor.scala 77:24]
    read mport historyState_1 = phtMem[_T_9], clock @[BranchPredictor.scala 98:35]
    node _T_10 = bits(historyState_1, 0, 0) @[BranchPredictor.scala 99:41]
    node _T_11 = cat(_T_10, io.jump) @[Cat.scala 33:92]
    write mport MPORT = phtMem[_T_9], clock
    MPORT <= _T_11
    node _T_12 = bits(exePCIndex, 11, 0) @[BranchPredictor.scala 78:38]
    read mport MPORT_1 = phtMem[_T_12], clock @[BranchPredictor.scala 95:16]
    node _T_13 = neq(MPORT_1, UInt<1>("h0")) @[BranchPredictor.scala 78:60]
    when _T_13 : @[BranchPredictor.scala 78:69]
      node _T_14 = asUInt(reset) @[BranchPredictor.scala 79:11]
      node _T_15 = eq(_T_14, UInt<1>("h0")) @[BranchPredictor.scala 79:11]
      when _T_15 : @[BranchPredictor.scala 79:11]
        printf(clock, UInt<1>("h1"), "[DEBUG] \u66F4\u65B0\u9971\u548C\u8BA1\u6570\u5668 : exePC = %d, jump = %d\n", io.exePC, io.jump) : printf_1 @[BranchPredictor.scala 79:11]
    when io.jump : @[BranchPredictor.scala 81:17]
      node pcSource = shl(exePCIndex, 2) @[BranchPredictor.scala 120:28]
      node data = cat(pcSource, io.selectPC) @[Cat.scala 33:92]
      node _T_16 = bits(exePCIndex, 5, 0) @[BranchPredictor.scala 122:25]
      write mport MPORT_2 = btbMem[_T_16], clock
      MPORT_2 <= data
    io.nextPC <= nextPC @[BranchPredictor.scala 86:13]
    io.flush <= flushReg @[BranchPredictor.scala 87:12]

  module DataForwardingUnit :
    input clock : Clock
    input reset : Reset
    output io : { flip inWriteEnable : UInt<1>, flip inRd : UInt<5>, flip inData : UInt<64>, flip pcRs1ToAlu : UInt<1>, flip rs1 : UInt<5>, flip memWrite : UInt<1>, flip immRs2ToAlu : UInt<1>, flip rs2 : UInt<5>, flip exeWriteEnable : UInt<1>, flip exeRd : UInt<5>, flip memWriteEnable : UInt<1>, flip memRd : UInt<5>, flip exeIsJump : UInt<1>, flip exeImmALUToReg : UInt<1>, flip exeMemRead : UInt<1>, flip exeALUResult : UInt<64>, flip exeImm : UInt<64>, flip memIsJump : UInt<1>, flip memImmALUToReg : UInt<1>, flip memMemRead : UInt<1>, flip memReadData : UInt<64>, flip memALUResult : UInt<64>, flip memImm : UInt<64>, flip exePC : UInt<64>, flip memPC : UInt<64>, writeEnable : UInt<1>, rd : UInt<5>, data : UInt<64>, keep : UInt<1>, stall : UInt<1>, flush : UInt<1>, forwardRs1 : UInt<1>, forwardRs2 : UInt<1>, forwardData1 : UInt<64>, forwardData2 : UInt<64>}

    reg needAdd_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[DataForwardingUnit.scala 75:25]
    reg needAdd_1 : UInt<64>, clock with :
      reset => (reset, UInt<64>("h0")) @[DataForwardingUnit.scala 76:28]
    reg ifNeedRs1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[DataForwardingUnit.scala 77:26]
    reg ifNeedRs2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[DataForwardingUnit.scala 78:26]
    wire keep : UInt<1>
    keep <= UInt<1>("h0")
    wire stall : UInt<1>
    stall <= UInt<1>("h0")
    wire flush : UInt<1>
    flush <= UInt<1>("h0")
    wire forwardRs1 : UInt<1>
    forwardRs1 <= UInt<1>("h0")
    wire forwardRs2 : UInt<1>
    forwardRs2 <= UInt<1>("h0")
    wire forwardData1 : UInt<64>
    forwardData1 <= UInt<64>("h0")
    wire forwardData2 : UInt<64>
    forwardData2 <= UInt<64>("h0")
    wire useRs1 : UInt<5>
    useRs1 <= UInt<5>("h0")
    wire useRs2 : UInt<5>
    useRs2 <= UInt<5>("h0")
    wire exeWriteRd : UInt<5>
    exeWriteRd <= UInt<5>("h0")
    wire memWriteRd : UInt<5>
    memWriteRd <= UInt<5>("h0")
    node _T = eq(io.pcRs1ToAlu, UInt<1>("h0")) @[DataForwardingUnit.scala 96:22]
    when _T : @[DataForwardingUnit.scala 96:35]
      useRs1 <= io.rs1 @[DataForwardingUnit.scala 96:44]
    node _T_1 = eq(io.immRs2ToAlu, UInt<1>("h0")) @[DataForwardingUnit.scala 97:23]
    node _T_2 = eq(io.memWrite, UInt<1>("h1")) @[DataForwardingUnit.scala 97:50]
    node _T_3 = or(_T_1, _T_2) @[DataForwardingUnit.scala 97:35]
    when _T_3 : @[DataForwardingUnit.scala 97:62]
      useRs2 <= io.rs2 @[DataForwardingUnit.scala 98:12]
    node _T_4 = eq(io.exeWriteEnable, UInt<1>("h1")) @[DataForwardingUnit.scala 100:26]
    when _T_4 : @[DataForwardingUnit.scala 100:38]
      exeWriteRd <= io.exeRd @[DataForwardingUnit.scala 100:51]
    node _T_5 = eq(io.memWriteEnable, UInt<1>("h1")) @[DataForwardingUnit.scala 101:26]
    when _T_5 : @[DataForwardingUnit.scala 101:38]
      memWriteRd <= io.memRd @[DataForwardingUnit.scala 101:51]
    node _ifRS1EXE_T = neq(exeWriteRd, UInt<1>("h0")) @[DataForwardingUnit.scala 104:17]
    node _ifRS1EXE_T_1 = eq(useRs1, exeWriteRd) @[DataForwardingUnit.scala 104:37]
    node ifRS1EXE = and(_ifRS1EXE_T, _ifRS1EXE_T_1) @[DataForwardingUnit.scala 104:26]
    node _ifRS2EXE_T = neq(exeWriteRd, UInt<1>("h0")) @[DataForwardingUnit.scala 106:17]
    node _ifRS2EXE_T_1 = eq(useRs2, exeWriteRd) @[DataForwardingUnit.scala 106:37]
    node ifRS2EXE = and(_ifRS2EXE_T, _ifRS2EXE_T_1) @[DataForwardingUnit.scala 106:26]
    node _ifRS1MEM_T = neq(memWriteRd, UInt<1>("h0")) @[DataForwardingUnit.scala 109:17]
    node _ifRS1MEM_T_1 = eq(useRs1, memWriteRd) @[DataForwardingUnit.scala 109:37]
    node ifRS1MEM = and(_ifRS1MEM_T, _ifRS1MEM_T_1) @[DataForwardingUnit.scala 109:26]
    node _ifRS2MEM_T = neq(memWriteRd, UInt<1>("h0")) @[DataForwardingUnit.scala 111:17]
    node _ifRS2MEM_T_1 = eq(useRs2, memWriteRd) @[DataForwardingUnit.scala 111:37]
    node ifRS2MEM = and(_ifRS2MEM_T, _ifRS2MEM_T_1) @[DataForwardingUnit.scala 111:26]
    wire exeResWire : UInt
    exeResWire <= io.exeALUResult
    node _T_6 = eq(io.exeIsJump, UInt<1>("h1")) @[DataForwardingUnit.scala 114:21]
    when _T_6 : @[DataForwardingUnit.scala 114:33]
      node _exeResWire_T = add(io.exePC, UInt<3>("h4")) @[DataForwardingUnit.scala 115:28]
      node _exeResWire_T_1 = tail(_exeResWire_T, 1) @[DataForwardingUnit.scala 115:28]
      exeResWire <= _exeResWire_T_1 @[DataForwardingUnit.scala 115:16]
    else :
      node _T_7 = eq(io.exeImmALUToReg, UInt<1>("h1")) @[DataForwardingUnit.scala 116:32]
      when _T_7 : @[DataForwardingUnit.scala 116:44]
        exeResWire <= io.exeImm @[DataForwardingUnit.scala 117:16]
    wire memResWire : UInt
    memResWire <= io.memALUResult
    node _T_8 = eq(io.memMemRead, UInt<1>("h1")) @[DataForwardingUnit.scala 121:22]
    when _T_8 : @[DataForwardingUnit.scala 121:34]
      memResWire <= io.memReadData @[DataForwardingUnit.scala 122:16]
    else :
      node _T_9 = eq(io.memIsJump, UInt<1>("h1")) @[DataForwardingUnit.scala 123:27]
      when _T_9 : @[DataForwardingUnit.scala 123:39]
        node _memResWire_T = add(io.memPC, UInt<3>("h4")) @[DataForwardingUnit.scala 124:28]
        node _memResWire_T_1 = tail(_memResWire_T, 1) @[DataForwardingUnit.scala 124:28]
        memResWire <= _memResWire_T_1 @[DataForwardingUnit.scala 124:16]
      else :
        node _T_10 = eq(io.memImmALUToReg, UInt<1>("h1")) @[DataForwardingUnit.scala 125:32]
        when _T_10 : @[DataForwardingUnit.scala 125:44]
          memResWire <= io.memImm @[DataForwardingUnit.scala 126:16]
    node _T_11 = eq(UInt<1>("h0"), needAdd_0) @[DataForwardingUnit.scala 130:20]
    when _T_11 : @[DataForwardingUnit.scala 130:20]
      keep <= UInt<1>("h0") @[DataForwardingUnit.scala 132:12]
      stall <= UInt<1>("h0") @[DataForwardingUnit.scala 133:13]
      flush <= UInt<1>("h0") @[DataForwardingUnit.scala 134:13]
      ifNeedRs1 <= UInt<1>("h0") @[DataForwardingUnit.scala 135:17]
      ifNeedRs2 <= UInt<1>("h0") @[DataForwardingUnit.scala 136:17]
      node _T_12 = eq(ifRS1EXE, UInt<1>("h1")) @[DataForwardingUnit.scala 138:21]
      when _T_12 : @[DataForwardingUnit.scala 138:33]
        node _T_13 = eq(io.exeMemRead, UInt<1>("h1")) @[DataForwardingUnit.scala 139:28]
        when _T_13 : @[DataForwardingUnit.scala 139:40]
          ifNeedRs1 <= UInt<1>("h1") @[DataForwardingUnit.scala 140:21]
          needAdd_1 <= io.exePC @[DataForwardingUnit.scala 141:23]
          keep <= UInt<1>("h1") @[DataForwardingUnit.scala 142:16]
          stall <= UInt<1>("h1") @[DataForwardingUnit.scala 143:17]
          needAdd_0 <= UInt<1>("h1") @[DataForwardingUnit.scala 144:20]
        else :
          forwardData1 <= exeResWire @[DataForwardingUnit.scala 147:24]
          forwardRs1 <= UInt<1>("h1") @[DataForwardingUnit.scala 148:22]
      else :
        node _T_14 = eq(ifRS1MEM, UInt<1>("h1")) @[DataForwardingUnit.scala 151:23]
        when _T_14 : @[DataForwardingUnit.scala 151:35]
          forwardData1 <= memResWire @[DataForwardingUnit.scala 152:24]
          forwardRs1 <= UInt<1>("h1") @[DataForwardingUnit.scala 153:22]
      node _T_15 = eq(ifRS2EXE, UInt<1>("h1")) @[DataForwardingUnit.scala 157:21]
      when _T_15 : @[DataForwardingUnit.scala 157:33]
        node _T_16 = eq(io.exeMemRead, UInt<1>("h1")) @[DataForwardingUnit.scala 158:28]
        when _T_16 : @[DataForwardingUnit.scala 158:40]
          ifNeedRs2 <= UInt<1>("h1") @[DataForwardingUnit.scala 159:21]
          needAdd_1 <= io.exePC @[DataForwardingUnit.scala 160:23]
          keep <= UInt<1>("h1") @[DataForwardingUnit.scala 161:16]
          stall <= UInt<1>("h1") @[DataForwardingUnit.scala 162:17]
          needAdd_0 <= UInt<1>("h1") @[DataForwardingUnit.scala 163:20]
        else :
          forwardData2 <= exeResWire @[DataForwardingUnit.scala 166:24]
          forwardRs2 <= UInt<1>("h1") @[DataForwardingUnit.scala 167:22]
      else :
        node _T_17 = eq(ifRS2MEM, UInt<1>("h1")) @[DataForwardingUnit.scala 170:23]
        when _T_17 : @[DataForwardingUnit.scala 170:35]
          forwardData2 <= memResWire @[DataForwardingUnit.scala 171:24]
          forwardRs2 <= UInt<1>("h1") @[DataForwardingUnit.scala 172:22]
    else :
      node _T_18 = eq(UInt<1>("h1"), needAdd_0) @[DataForwardingUnit.scala 130:20]
      when _T_18 : @[DataForwardingUnit.scala 130:20]
        keep <= UInt<1>("h1") @[DataForwardingUnit.scala 178:12]
        stall <= UInt<1>("h1") @[DataForwardingUnit.scala 179:13]
        flush <= UInt<1>("h1") @[DataForwardingUnit.scala 180:13]
        node _T_19 = eq(io.memPC, needAdd_1) @[DataForwardingUnit.scala 182:21]
        when _T_19 : @[DataForwardingUnit.scala 182:38]
          node _T_20 = eq(ifNeedRs1, UInt<1>("h1")) @[DataForwardingUnit.scala 183:24]
          when _T_20 : @[DataForwardingUnit.scala 183:36]
            forwardData1 <= memResWire @[DataForwardingUnit.scala 184:24]
            forwardRs1 <= UInt<1>("h1") @[DataForwardingUnit.scala 185:22]
          node _T_21 = eq(ifNeedRs2, UInt<1>("h1")) @[DataForwardingUnit.scala 187:24]
          when _T_21 : @[DataForwardingUnit.scala 187:36]
            forwardData2 <= memResWire @[DataForwardingUnit.scala 188:24]
            forwardRs2 <= UInt<1>("h1") @[DataForwardingUnit.scala 189:22]
          needAdd_1 <= UInt<1>("h0") @[DataForwardingUnit.scala 192:21]
          keep <= UInt<1>("h0") @[DataForwardingUnit.scala 193:14]
          stall <= UInt<1>("h0") @[DataForwardingUnit.scala 194:15]
          needAdd_0 <= UInt<1>("h0") @[DataForwardingUnit.scala 195:18]
    io.keep <= keep @[DataForwardingUnit.scala 200:11]
    io.stall <= stall @[DataForwardingUnit.scala 201:12]
    io.flush <= flush @[DataForwardingUnit.scala 202:12]
    io.forwardRs1 <= forwardRs1 @[DataForwardingUnit.scala 204:17]
    io.forwardRs2 <= forwardRs2 @[DataForwardingUnit.scala 205:17]
    io.forwardData1 <= forwardData1 @[DataForwardingUnit.scala 206:19]
    io.forwardData2 <= forwardData2 @[DataForwardingUnit.scala 207:19]
    io.writeEnable <= io.inWriteEnable @[DataForwardingUnit.scala 210:18]
    io.rd <= io.inRd @[DataForwardingUnit.scala 211:9]
    io.data <= io.inData @[DataForwardingUnit.scala 212:11]

  module PiplineCPUwithBPandF :
    input clock : Clock
    input reset : UInt<1>
    output io : { isValidInst : UInt<1>, ifPC : UInt<64>, ifInst : UInt<32>, idPC : UInt<64>, idInst : UInt<32>, exePC : UInt<64>, exeInst : UInt<32>, memPC : UInt<64>, memInst : UInt<32>, wbPC : UInt<64>, wbInst : UInt<32>, nextPC : UInt<64>, aluOperation : UInt<6>, imm : UInt<64>, aluResult : UInt<64>, opcode : UInt<7>, isTrue : UInt<1>, isJALR : UInt<1>, isBType : UInt<1>, isJump : UInt<1>, immALUToReg : UInt<1>, memRead : UInt<1>, memWrite : UInt<1>, immRs2ToALU : UInt<1>, aluY : UInt<64>, pcRs1ToALU : UInt<1>, aluX : UInt<64>, isIType : UInt<1>, isRType : UInt<1>, isWord : UInt<1>, ifWriteToReg : UInt<1>, address : UInt<64>, writeData : UInt<64>, rs1 : UInt<5>, readDataRs1 : UInt<64>, rs2 : UInt<5>, readDataRs2 : UInt<64>, rd : UInt<5>, resultToReg : UInt<64>, bitType : UInt<2>, isUnsigned : UInt<1>, readData : UInt<64>, regAll : UInt<64>[32]}

    inst pcReg of PCReg @[PiplineCPUGeneral.scala 89:21]
    pcReg.clock <= clock
    pcReg.reset <= reset
    inst instMemory of InstMemory @[PiplineCPUGeneral.scala 90:26]
    instMemory.clock <= clock
    instMemory.reset <= reset
    inst controlUnit of ControlUnit @[PiplineCPUGeneral.scala 91:27]
    controlUnit.clock <= clock
    controlUnit.reset <= reset
    inst inst2ImmUnit of Inst2ImmUnit @[PiplineCPUGeneral.scala 92:28]
    inst2ImmUnit.clock <= clock
    inst2ImmUnit.reset <= reset
    inst regUnit of RegUnitWithForwarding @[PiplineCPUGeneral.scala 93:23]
    regUnit.clock <= clock
    regUnit.reset <= reset
    inst aluControlUnit of ALUControlUnit @[PiplineCPUGeneral.scala 94:30]
    aluControlUnit.clock <= clock
    aluControlUnit.reset <= reset
    inst pcSelectUnit of PCSelectUnit @[PiplineCPUGeneral.scala 95:28]
    pcSelectUnit.clock <= clock
    pcSelectUnit.reset <= reset
    inst alu of ALU @[PiplineCPUGeneral.scala 96:19]
    alu.clock <= clock
    alu.reset <= reset
    inst dataMemory of DataMemory @[PiplineCPUGeneral.scala 97:26]
    dataMemory.clock <= clock
    dataMemory.reset <= reset
    inst resSelectUnit of ResSelectUnit @[PiplineCPUGeneral.scala 98:29]
    resSelectUnit.clock <= clock
    resSelectUnit.reset <= reset
    inst ifIDStageRegs of IFIDStageRegs @[PiplineCPUGeneral.scala 100:29]
    ifIDStageRegs.clock <= clock
    ifIDStageRegs.reset <= reset
    inst idEXEStageRegs of IDEXEStageRegs @[PiplineCPUGeneral.scala 101:30]
    idEXEStageRegs.clock <= clock
    idEXEStageRegs.reset <= reset
    inst exeMEMStageRegs of EXEMEMStageRegs @[PiplineCPUGeneral.scala 102:31]
    exeMEMStageRegs.clock <= clock
    exeMEMStageRegs.reset <= reset
    inst memWBStageRegs of MEMWBStageRegs @[PiplineCPUGeneral.scala 103:30]
    memWBStageRegs.clock <= clock
    memWBStageRegs.reset <= reset
    node rs1UInt = cat(UInt<1>("h0"), io.rs1) @[Cat.scala 33:92]
    node rs2UInt = cat(UInt<1>("h0"), io.rs2) @[Cat.scala 33:92]
    node rdUInt = cat(UInt<1>("h0"), io.rd) @[Cat.scala 33:92]
    inst branchPredictor of BranchPredictor @[PiplineCPUwithBPandF.scala 29:31]
    branchPredictor.clock <= clock
    branchPredictor.reset <= reset
    inst dataForwardingUnit of DataForwardingUnit @[PiplineCPUwithBPandF.scala 30:34]
    dataForwardingUnit.clock <= clock
    dataForwardingUnit.reset <= reset
    node readDataRs1 = mux(dataForwardingUnit.io.forwardRs1, dataForwardingUnit.io.forwardData1, regUnit.io.readDataRs1) @[PiplineCPUwithBPandF.scala 33:24]
    node readDataRs2 = mux(dataForwardingUnit.io.forwardRs2, dataForwardingUnit.io.forwardData2, regUnit.io.readDataRs2) @[PiplineCPUwithBPandF.scala 38:24]
    io.isValidInst <= controlUnit.io.isValidInst @[PiplineCPUwithBPandF.scala 44:18]
    io.ifPC <= ifIDStageRegs.io.in.pc @[PiplineCPUwithBPandF.scala 46:11]
    io.ifInst <= ifIDStageRegs.io.in.inst @[PiplineCPUwithBPandF.scala 47:13]
    io.idPC <= idEXEStageRegs.io.in.pc @[PiplineCPUwithBPandF.scala 48:11]
    io.idInst <= idEXEStageRegs.io.in.inst @[PiplineCPUwithBPandF.scala 49:13]
    io.exePC <= exeMEMStageRegs.io.in.pc @[PiplineCPUwithBPandF.scala 50:12]
    io.exeInst <= exeMEMStageRegs.io.in.inst @[PiplineCPUwithBPandF.scala 51:14]
    io.memPC <= memWBStageRegs.io.in.pc @[PiplineCPUwithBPandF.scala 52:12]
    io.memInst <= memWBStageRegs.io.in.inst @[PiplineCPUwithBPandF.scala 53:14]
    io.wbPC <= memWBStageRegs.io.out.pc @[PiplineCPUwithBPandF.scala 54:11]
    io.wbInst <= memWBStageRegs.io.out.inst @[PiplineCPUwithBPandF.scala 55:13]
    io.resultToReg <= regUnit.io.writeData @[PiplineCPUwithBPandF.scala 57:18]
    io.readData <= dataMemory.io.readData @[PiplineCPUwithBPandF.scala 58:15]
    io.aluResult <= alu.io.result @[PiplineCPUwithBPandF.scala 59:16]
    io.isTrue <= pcSelectUnit.io.isTrue @[PiplineCPUwithBPandF.scala 61:13]
    io.opcode <= controlUnit.io.opcode @[PiplineCPUwithBPandF.scala 62:13]
    io.isJALR <= pcSelectUnit.io.isJALR @[PiplineCPUwithBPandF.scala 63:13]
    io.isBType <= pcSelectUnit.io.isBType @[PiplineCPUwithBPandF.scala 64:14]
    io.isJump <= pcSelectUnit.io.isJump @[PiplineCPUwithBPandF.scala 65:13]
    io.immALUToReg <= controlUnit.io.immALUToReg @[PiplineCPUwithBPandF.scala 66:18]
    io.memRead <= dataMemory.io.memRead @[PiplineCPUwithBPandF.scala 67:14]
    io.memWrite <= dataMemory.io.memWrite @[PiplineCPUwithBPandF.scala 68:15]
    io.immRs2ToALU <= controlUnit.io.immRs2ToALU @[PiplineCPUwithBPandF.scala 69:18]
    io.aluY <= alu.io.y @[PiplineCPUwithBPandF.scala 70:11]
    io.pcRs1ToALU <= controlUnit.io.pcRs1ToALU @[PiplineCPUwithBPandF.scala 71:17]
    io.aluX <= alu.io.x @[PiplineCPUwithBPandF.scala 72:11]
    io.isIType <= controlUnit.io.isIType @[PiplineCPUwithBPandF.scala 73:14]
    io.isRType <= controlUnit.io.isRType @[PiplineCPUwithBPandF.scala 74:14]
    io.isWord <= controlUnit.io.isWord @[PiplineCPUwithBPandF.scala 75:13]
    io.ifWriteToReg <= regUnit.io.writeEnable @[PiplineCPUwithBPandF.scala 76:19]
    io.address <= dataMemory.io.address @[PiplineCPUwithBPandF.scala 78:14]
    io.writeData <= dataMemory.io.writeData @[PiplineCPUwithBPandF.scala 79:16]
    io.aluOperation <= alu.io.aluOperation @[PiplineCPUwithBPandF.scala 81:19]
    io.imm <= inst2ImmUnit.io.imm @[PiplineCPUwithBPandF.scala 82:10]
    io.rs1 <= regUnit.io.rs1 @[PiplineCPUwithBPandF.scala 83:10]
    io.readDataRs1 <= readDataRs1 @[PiplineCPUwithBPandF.scala 84:18]
    io.rs2 <= regUnit.io.rs2 @[PiplineCPUwithBPandF.scala 85:10]
    io.readDataRs2 <= readDataRs2 @[PiplineCPUwithBPandF.scala 86:18]
    io.rd <= regUnit.io.rd @[PiplineCPUwithBPandF.scala 87:9]
    io.nextPC <= branchPredictor.io.nextPC @[PiplineCPUwithBPandF.scala 88:13]
    io.bitType <= dataMemory.io.bitType @[PiplineCPUwithBPandF.scala 90:14]
    io.isUnsigned <= dataMemory.io.isUnsigned @[PiplineCPUwithBPandF.scala 91:17]
    io.regAll[0] <= regUnit.io.regAll[0] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[1] <= regUnit.io.regAll[1] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[2] <= regUnit.io.regAll[2] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[3] <= regUnit.io.regAll[3] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[4] <= regUnit.io.regAll[4] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[5] <= regUnit.io.regAll[5] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[6] <= regUnit.io.regAll[6] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[7] <= regUnit.io.regAll[7] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[8] <= regUnit.io.regAll[8] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[9] <= regUnit.io.regAll[9] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[10] <= regUnit.io.regAll[10] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[11] <= regUnit.io.regAll[11] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[12] <= regUnit.io.regAll[12] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[13] <= regUnit.io.regAll[13] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[14] <= regUnit.io.regAll[14] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[15] <= regUnit.io.regAll[15] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[16] <= regUnit.io.regAll[16] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[17] <= regUnit.io.regAll[17] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[18] <= regUnit.io.regAll[18] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[19] <= regUnit.io.regAll[19] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[20] <= regUnit.io.regAll[20] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[21] <= regUnit.io.regAll[21] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[22] <= regUnit.io.regAll[22] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[23] <= regUnit.io.regAll[23] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[24] <= regUnit.io.regAll[24] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[25] <= regUnit.io.regAll[25] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[26] <= regUnit.io.regAll[26] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[27] <= regUnit.io.regAll[27] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[28] <= regUnit.io.regAll[28] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[29] <= regUnit.io.regAll[29] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[30] <= regUnit.io.regAll[30] @[PiplineCPUwithBPandF.scala 94:18]
    io.regAll[31] <= regUnit.io.regAll[31] @[PiplineCPUwithBPandF.scala 94:18]
    node opcode = bits(ifIDStageRegs.io.out.inst, 6, 0) @[PiplineCPUwithBPandF.scala 109:22]
    node rs1 = bits(ifIDStageRegs.io.out.inst, 19, 15) @[PiplineCPUwithBPandF.scala 111:19]
    node rs2 = bits(ifIDStageRegs.io.out.inst, 24, 20) @[PiplineCPUwithBPandF.scala 112:19]
    node rd = bits(ifIDStageRegs.io.out.inst, 11, 7) @[PiplineCPUwithBPandF.scala 113:18]
    node funct3 = bits(ifIDStageRegs.io.out.inst, 14, 12) @[PiplineCPUwithBPandF.scala 114:22]
    node funct7 = bits(ifIDStageRegs.io.out.inst, 31, 25) @[PiplineCPUwithBPandF.scala 115:22]
    node bitType = bits(exeMEMStageRegs.io.out.inst, 13, 12) @[PiplineCPUwithBPandF.scala 117:24]
    node isUnsigned = bits(exeMEMStageRegs.io.out.inst, 14, 14) @[PiplineCPUwithBPandF.scala 118:27]
    node wbRd = bits(memWBStageRegs.io.out.inst, 11, 7) @[PiplineCPUwithBPandF.scala 120:20]
    ifIDStageRegs.io.stall <= dataForwardingUnit.io.stall @[PiplineCPUwithBPandF.scala 122:26]
    ifIDStageRegs.io.flush <= branchPredictor.io.flush @[PiplineCPUwithBPandF.scala 123:26]
    ifIDStageRegs.io.in.pc <= pcReg.io.out @[PiplineCPUwithBPandF.scala 124:26]
    ifIDStageRegs.io.in.inst <= instMemory.io.inst @[PiplineCPUwithBPandF.scala 125:28]
    idEXEStageRegs.io.stall <= UInt<1>("h0") @[PiplineCPUwithBPandF.scala 127:27]
    node _idEXEStageRegs_io_flush_T = or(dataForwardingUnit.io.flush, branchPredictor.io.flush) @[PiplineCPUwithBPandF.scala 128:58]
    idEXEStageRegs.io.flush <= _idEXEStageRegs_io_flush_T @[PiplineCPUwithBPandF.scala 128:27]
    idEXEStageRegs.io.in.pc <= ifIDStageRegs.io.out.pc @[PiplineCPUwithBPandF.scala 129:27]
    idEXEStageRegs.io.in.inst <= ifIDStageRegs.io.out.inst @[PiplineCPUwithBPandF.scala 130:29]
    idEXEStageRegs.io.in.isJALR <= controlUnit.io.isJALR @[PiplineCPUwithBPandF.scala 131:31]
    idEXEStageRegs.io.in.isBType <= controlUnit.io.isBType @[PiplineCPUwithBPandF.scala 132:32]
    idEXEStageRegs.io.in.isJump <= controlUnit.io.isJump @[PiplineCPUwithBPandF.scala 133:31]
    idEXEStageRegs.io.in.immALUToReg <= controlUnit.io.immALUToReg @[PiplineCPUwithBPandF.scala 134:36]
    idEXEStageRegs.io.in.memRead <= controlUnit.io.memRead @[PiplineCPUwithBPandF.scala 135:32]
    idEXEStageRegs.io.in.memWrite <= controlUnit.io.memWrite @[PiplineCPUwithBPandF.scala 136:33]
    idEXEStageRegs.io.in.writeEnable <= controlUnit.io.ifWriteToReg @[PiplineCPUwithBPandF.scala 137:36]
    idEXEStageRegs.io.in.aluOperation <= aluControlUnit.io.aluOperation @[PiplineCPUwithBPandF.scala 138:37]
    idEXEStageRegs.io.in.readDataRs2 <= readDataRs2 @[PiplineCPUwithBPandF.scala 139:36]
    idEXEStageRegs.io.in.rd <= rd @[PiplineCPUwithBPandF.scala 140:27]
    node _idEXEStageRegs_io_in_aluX_T = mux(controlUnit.io.pcRs1ToALU, ifIDStageRegs.io.out.pc, readDataRs1) @[PiplineCPUwithBPandF.scala 141:35]
    idEXEStageRegs.io.in.aluX <= _idEXEStageRegs_io_in_aluX_T @[PiplineCPUwithBPandF.scala 141:29]
    node _idEXEStageRegs_io_in_aluY_T = mux(controlUnit.io.immRs2ToALU, inst2ImmUnit.io.imm, readDataRs2) @[PiplineCPUwithBPandF.scala 146:35]
    idEXEStageRegs.io.in.aluY <= _idEXEStageRegs_io_in_aluY_T @[PiplineCPUwithBPandF.scala 146:29]
    idEXEStageRegs.io.in.imm <= inst2ImmUnit.io.imm @[PiplineCPUwithBPandF.scala 151:28]
    exeMEMStageRegs.io.stall <= UInt<1>("h0") @[PiplineCPUwithBPandF.scala 153:28]
    exeMEMStageRegs.io.flush <= UInt<1>("h0") @[PiplineCPUwithBPandF.scala 154:28]
    exeMEMStageRegs.io.in.pc <= idEXEStageRegs.io.out.pc @[PiplineCPUwithBPandF.scala 155:28]
    exeMEMStageRegs.io.in.inst <= idEXEStageRegs.io.out.inst @[PiplineCPUwithBPandF.scala 156:30]
    exeMEMStageRegs.io.in.isJump <= idEXEStageRegs.io.out.isJump @[PiplineCPUwithBPandF.scala 157:32]
    exeMEMStageRegs.io.in.immALUToReg <= idEXEStageRegs.io.out.immALUToReg @[PiplineCPUwithBPandF.scala 158:37]
    exeMEMStageRegs.io.in.memRead <= idEXEStageRegs.io.out.memRead @[PiplineCPUwithBPandF.scala 159:33]
    exeMEMStageRegs.io.in.memWrite <= idEXEStageRegs.io.out.memWrite @[PiplineCPUwithBPandF.scala 160:34]
    exeMEMStageRegs.io.in.writeEnable <= idEXEStageRegs.io.out.writeEnable @[PiplineCPUwithBPandF.scala 161:37]
    exeMEMStageRegs.io.in.readDataRs2 <= idEXEStageRegs.io.out.readDataRs2 @[PiplineCPUwithBPandF.scala 162:37]
    exeMEMStageRegs.io.in.rd <= idEXEStageRegs.io.out.rd @[PiplineCPUwithBPandF.scala 163:28]
    exeMEMStageRegs.io.in.aluResult <= alu.io.result @[PiplineCPUwithBPandF.scala 164:35]
    exeMEMStageRegs.io.in.imm <= idEXEStageRegs.io.out.imm @[PiplineCPUwithBPandF.scala 165:29]
    memWBStageRegs.io.stall <= UInt<1>("h0") @[PiplineCPUwithBPandF.scala 167:27]
    memWBStageRegs.io.flush <= UInt<1>("h0") @[PiplineCPUwithBPandF.scala 168:27]
    memWBStageRegs.io.in.pc <= exeMEMStageRegs.io.out.pc @[PiplineCPUwithBPandF.scala 169:27]
    memWBStageRegs.io.in.inst <= exeMEMStageRegs.io.out.inst @[PiplineCPUwithBPandF.scala 170:29]
    memWBStageRegs.io.in.isJump <= exeMEMStageRegs.io.out.isJump @[PiplineCPUwithBPandF.scala 171:31]
    memWBStageRegs.io.in.immALUToReg <= exeMEMStageRegs.io.out.immALUToReg @[PiplineCPUwithBPandF.scala 172:36]
    memWBStageRegs.io.in.memRead <= exeMEMStageRegs.io.out.memRead @[PiplineCPUwithBPandF.scala 173:32]
    memWBStageRegs.io.in.writeEnable <= exeMEMStageRegs.io.out.writeEnable @[PiplineCPUwithBPandF.scala 174:36]
    memWBStageRegs.io.in.readData <= dataMemory.io.readData @[PiplineCPUwithBPandF.scala 175:33]
    memWBStageRegs.io.in.rd <= exeMEMStageRegs.io.in.rd @[PiplineCPUwithBPandF.scala 176:27]
    memWBStageRegs.io.in.aluResult <= exeMEMStageRegs.io.out.aluResult @[PiplineCPUwithBPandF.scala 177:34]
    memWBStageRegs.io.in.imm <= exeMEMStageRegs.io.out.imm @[PiplineCPUwithBPandF.scala 178:28]
    branchPredictor.io.keep <= dataForwardingUnit.io.keep @[PiplineCPUwithBPandF.scala 180:27]
    node _branchPredictor_io_ifMayJump_T = bits(instMemory.io.inst, 6, 5) @[PiplineCPUwithBPandF.scala 182:12]
    node _branchPredictor_io_ifMayJump_T_1 = eq(_branchPredictor_io_ifMayJump_T, UInt<2>("h3")) @[PiplineCPUwithBPandF.scala 182:19]
    branchPredictor.io.ifMayJump <= _branchPredictor_io_ifMayJump_T_1 @[PiplineCPUwithBPandF.scala 181:32]
    branchPredictor.io.ifPC <= pcReg.io.out @[PiplineCPUwithBPandF.scala 183:27]
    branchPredictor.io.idPC <= ifIDStageRegs.io.out.pc @[PiplineCPUwithBPandF.scala 184:27]
    branchPredictor.io.exePC <= idEXEStageRegs.io.out.pc @[PiplineCPUwithBPandF.scala 185:28]
    branchPredictor.io.idInst <= ifIDStageRegs.io.out.inst @[PiplineCPUwithBPandF.scala 186:29]
    branchPredictor.io.exeInst <= idEXEStageRegs.io.out.inst @[PiplineCPUwithBPandF.scala 187:30]
    branchPredictor.io.selectPC <= pcSelectUnit.io.nextPC @[PiplineCPUwithBPandF.scala 188:31]
    branchPredictor.io.jump <= pcSelectUnit.io.jump @[PiplineCPUwithBPandF.scala 189:27]
    dataForwardingUnit.io.inWriteEnable <= memWBStageRegs.io.out.writeEnable @[PiplineCPUwithBPandF.scala 191:39]
    dataForwardingUnit.io.inRd <= wbRd @[PiplineCPUwithBPandF.scala 192:30]
    dataForwardingUnit.io.inData <= resSelectUnit.io.out @[PiplineCPUwithBPandF.scala 193:32]
    dataForwardingUnit.io.pcRs1ToAlu <= controlUnit.io.pcRs1ToALU @[PiplineCPUwithBPandF.scala 194:36]
    dataForwardingUnit.io.rs1 <= rs1 @[PiplineCPUwithBPandF.scala 195:29]
    dataForwardingUnit.io.memWrite <= controlUnit.io.memWrite @[PiplineCPUwithBPandF.scala 196:34]
    dataForwardingUnit.io.immRs2ToAlu <= controlUnit.io.immRs2ToALU @[PiplineCPUwithBPandF.scala 197:37]
    dataForwardingUnit.io.rs2 <= rs2 @[PiplineCPUwithBPandF.scala 198:29]
    dataForwardingUnit.io.exeWriteEnable <= idEXEStageRegs.io.out.writeEnable @[PiplineCPUwithBPandF.scala 199:40]
    dataForwardingUnit.io.exeRd <= idEXEStageRegs.io.out.rd @[PiplineCPUwithBPandF.scala 200:31]
    dataForwardingUnit.io.memWriteEnable <= exeMEMStageRegs.io.out.writeEnable @[PiplineCPUwithBPandF.scala 201:40]
    dataForwardingUnit.io.memRd <= exeMEMStageRegs.io.out.rd @[PiplineCPUwithBPandF.scala 202:31]
    dataForwardingUnit.io.exeIsJump <= idEXEStageRegs.io.out.isJump @[PiplineCPUwithBPandF.scala 204:35]
    dataForwardingUnit.io.exeImmALUToReg <= idEXEStageRegs.io.out.immALUToReg @[PiplineCPUwithBPandF.scala 205:40]
    dataForwardingUnit.io.exeMemRead <= idEXEStageRegs.io.out.memRead @[PiplineCPUwithBPandF.scala 206:36]
    dataForwardingUnit.io.exeALUResult <= alu.io.result @[PiplineCPUwithBPandF.scala 207:38]
    dataForwardingUnit.io.exeImm <= idEXEStageRegs.io.out.imm @[PiplineCPUwithBPandF.scala 208:32]
    dataForwardingUnit.io.memIsJump <= exeMEMStageRegs.io.out.isJump @[PiplineCPUwithBPandF.scala 210:35]
    dataForwardingUnit.io.memImmALUToReg <= exeMEMStageRegs.io.out.immALUToReg @[PiplineCPUwithBPandF.scala 211:40]
    dataForwardingUnit.io.memMemRead <= exeMEMStageRegs.io.out.memRead @[PiplineCPUwithBPandF.scala 212:36]
    dataForwardingUnit.io.memReadData <= dataMemory.io.readData @[PiplineCPUwithBPandF.scala 213:37]
    dataForwardingUnit.io.memALUResult <= exeMEMStageRegs.io.out.aluResult @[PiplineCPUwithBPandF.scala 214:38]
    dataForwardingUnit.io.memImm <= exeMEMStageRegs.io.out.imm @[PiplineCPUwithBPandF.scala 215:32]
    dataForwardingUnit.io.exePC <= idEXEStageRegs.io.out.pc @[PiplineCPUwithBPandF.scala 217:31]
    dataForwardingUnit.io.memPC <= exeMEMStageRegs.io.out.pc @[PiplineCPUwithBPandF.scala 218:31]
    pcReg.io.in <= branchPredictor.io.nextPC @[PiplineCPUwithBPandF.scala 220:15]
    instMemory.io.address <= pcReg.io.out @[PiplineCPUwithBPandF.scala 222:25]
    controlUnit.io.opcode <= opcode @[PiplineCPUwithBPandF.scala 224:25]
    aluControlUnit.io.isBType <= controlUnit.io.isBType @[PiplineCPUwithBPandF.scala 226:29]
    aluControlUnit.io.isIType <= controlUnit.io.isIType @[PiplineCPUwithBPandF.scala 227:29]
    aluControlUnit.io.isRType <= controlUnit.io.isRType @[PiplineCPUwithBPandF.scala 228:29]
    aluControlUnit.io.isWord <= controlUnit.io.isWord @[PiplineCPUwithBPandF.scala 229:28]
    aluControlUnit.io.funct3 <= funct3 @[PiplineCPUwithBPandF.scala 230:28]
    aluControlUnit.io.funct7 <= funct7 @[PiplineCPUwithBPandF.scala 231:28]
    regUnit.io.writeEnable <= dataForwardingUnit.io.writeEnable @[PiplineCPUwithBPandF.scala 233:26]
    regUnit.io.rs1 <= rs1 @[PiplineCPUwithBPandF.scala 234:18]
    regUnit.io.rs2 <= rs2 @[PiplineCPUwithBPandF.scala 235:18]
    regUnit.io.rd <= dataForwardingUnit.io.rd @[PiplineCPUwithBPandF.scala 236:17]
    regUnit.io.writeData <= dataForwardingUnit.io.data @[PiplineCPUwithBPandF.scala 237:24]
    inst2ImmUnit.io.inst <= ifIDStageRegs.io.out.inst @[PiplineCPUwithBPandF.scala 239:24]
    node _pcSelectUnit_io_pcPlus4_T = add(idEXEStageRegs.io.out.pc, UInt<3>("h4")) @[PiplineCPUwithBPandF.scala 241:36]
    node _pcSelectUnit_io_pcPlus4_T_1 = tail(_pcSelectUnit_io_pcPlus4_T, 1) @[PiplineCPUwithBPandF.scala 241:36]
    pcSelectUnit.io.pcPlus4 <= _pcSelectUnit_io_pcPlus4_T_1 @[PiplineCPUwithBPandF.scala 241:27]
    node _pcSelectUnit_io_pcPlusImm_T = add(idEXEStageRegs.io.out.pc, idEXEStageRegs.io.out.imm) @[PiplineCPUwithBPandF.scala 242:38]
    node _pcSelectUnit_io_pcPlusImm_T_1 = tail(_pcSelectUnit_io_pcPlusImm_T, 1) @[PiplineCPUwithBPandF.scala 242:38]
    pcSelectUnit.io.pcPlusImm <= _pcSelectUnit_io_pcPlusImm_T_1 @[PiplineCPUwithBPandF.scala 242:29]
    pcSelectUnit.io.isJALR <= idEXEStageRegs.io.out.isJALR @[PiplineCPUwithBPandF.scala 243:26]
    pcSelectUnit.io.isBType <= idEXEStageRegs.io.out.isBType @[PiplineCPUwithBPandF.scala 244:27]
    pcSelectUnit.io.isJump <= idEXEStageRegs.io.out.isJump @[PiplineCPUwithBPandF.scala 245:26]
    node _pcSelectUnit_io_isTrue_T = bits(alu.io.result, 0, 0) @[PiplineCPUwithBPandF.scala 246:42]
    pcSelectUnit.io.isTrue <= _pcSelectUnit_io_isTrue_T @[PiplineCPUwithBPandF.scala 246:26]
    pcSelectUnit.io.aluResult <= alu.io.result @[PiplineCPUwithBPandF.scala 247:29]
    alu.io.aluOperation <= idEXEStageRegs.io.out.aluOperation @[PiplineCPUwithBPandF.scala 249:23]
    alu.io.x <= idEXEStageRegs.io.out.aluX @[PiplineCPUwithBPandF.scala 250:12]
    alu.io.y <= idEXEStageRegs.io.out.aluY @[PiplineCPUwithBPandF.scala 251:12]
    dataMemory.io.memRead <= exeMEMStageRegs.io.out.memRead @[PiplineCPUwithBPandF.scala 253:25]
    dataMemory.io.memWrite <= exeMEMStageRegs.io.out.memWrite @[PiplineCPUwithBPandF.scala 254:26]
    dataMemory.io.address <= exeMEMStageRegs.io.out.aluResult @[PiplineCPUwithBPandF.scala 255:25]
    dataMemory.io.writeData <= exeMEMStageRegs.io.out.readDataRs2 @[PiplineCPUwithBPandF.scala 256:27]
    dataMemory.io.bitType <= bitType @[PiplineCPUwithBPandF.scala 257:25]
    dataMemory.io.isUnsigned <= isUnsigned @[PiplineCPUwithBPandF.scala 258:28]
    resSelectUnit.io.isJump <= memWBStageRegs.io.out.isJump @[PiplineCPUwithBPandF.scala 260:27]
    resSelectUnit.io.immALUToReg <= memWBStageRegs.io.out.immALUToReg @[PiplineCPUwithBPandF.scala 261:32]
    resSelectUnit.io.memRead <= memWBStageRegs.io.out.memRead @[PiplineCPUwithBPandF.scala 262:28]
    resSelectUnit.io.readData <= memWBStageRegs.io.out.readData @[PiplineCPUwithBPandF.scala 263:29]
    resSelectUnit.io.aluResult <= memWBStageRegs.io.out.aluResult @[PiplineCPUwithBPandF.scala 264:30]
    resSelectUnit.io.imm <= memWBStageRegs.io.out.imm @[PiplineCPUwithBPandF.scala 265:24]
    node _resSelectUnit_io_pcPlus4_T = add(memWBStageRegs.io.out.pc, UInt<3>("h4")) @[PiplineCPUwithBPandF.scala 266:36]
    node _resSelectUnit_io_pcPlus4_T_1 = tail(_resSelectUnit_io_pcPlus4_T, 1) @[PiplineCPUwithBPandF.scala 266:36]
    resSelectUnit.io.pcPlus4 <= _resSelectUnit_io_pcPlus4_T_1 @[PiplineCPUwithBPandF.scala 266:28]

